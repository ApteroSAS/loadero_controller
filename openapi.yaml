openapi: 3.0.1
info:
  title: Loadero Controller
  description: |-
    This application serves main Loadero's endpoints that can be used to
    manipulate test data and other services
  contact:
    name: Loadero Support
    email: support@loadero.com
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  version: v0.32.1
servers:
- url: http://api.loadero.com/v2
- url: https://api.loadero.com/v2
paths:
  /projects/{projectID}/:
    get:
      tags:
      - project
      summary: Get existing project
      description: This endpoint retrieves project info. Project must be previously
        created
      operationId: readProject
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      responses:
        200:
          description: fullProject
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fullProject'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/files/{fileID}/:
    get:
      tags:
      - file
      summary: Read file info.
      description: This endpoint retrieves file info.
      operationId: readFile
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: fileID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: FileID
        x-go-name: FileID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      responses:
        200:
          description: File
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/runs/:
    get:
      tags:
      - projectrun
      summary: Get all existing test runs for project
      description: |-
        This endpoint retrieves all test run info. Project must be previously
        created
      operationId: readAllProjectRuns
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Limit
        x-go-name: Limit
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Offset
        x-go-name: Offset
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: filter_test_name
        in: query
        schema:
          type: string
          x-go-name: FilterName
        x-go-name: FilterName
      - name: filter_started_from
        in: query
        schema:
          type: string
          x-go-name: FilterStartedFrom
        x-go-name: FilterStartedFrom
      - name: filter_started_to
        in: query
        schema:
          type: string
          x-go-name: FilterStartedTo
        x-go-name: FilterStartedTo
      - name: filter_finished_from
        in: query
        schema:
          type: string
          x-go-name: FilterFinishedFrom
        x-go-name: FilterFinishedFrom
      - name: filter_finished_to
        in: query
        schema:
          type: string
          x-go-name: FilterFinishedTo
        x-go-name: FilterFinishedTo
      - name: filter_execution_started_from
        in: query
        schema:
          type: string
          x-go-name: FilterExecutionStartedFrom
        x-go-name: FilterExecutionStartedFrom
      - name: filter_execution_started_to
        in: query
        schema:
          type: string
          x-go-name: FilterExecutionStartedTo
        x-go-name: FilterExecutionStartedTo
      - name: filter_execution_finished_from
        in: query
        schema:
          type: string
          x-go-name: FilterExecutionFinishFrom
        x-go-name: FilterExecutionFinishFrom
      - name: filter_execution_finished_to
        in: query
        schema:
          type: string
          x-go-name: FilterExecutionFinishTo
        x-go-name: FilterExecutionFinishTo
      - name: filter_increment_strategy
        in: query
        schema:
          type: string
          x-go-name: FilterIncrementStrategy
        x-go-name: FilterIncrementStrategy
      - name: filter_status
        in: query
        schema:
          type: string
          x-go-name: FilterStatus
        x-go-name: FilterStatus
      - name: filter_test_mode
        in: query
        schema:
          type: string
          x-go-name: FilterTestMode
        x-go-name: FilterTestMode
      - name: filter_start_interval_from
        in: query
        schema:
          type: string
          x-go-name: FilterStartIntervalFrom
        x-go-name: FilterStartIntervalFrom
      - name: filter_start_interval_to
        in: query
        schema:
          type: string
          x-go-name: FilterStartIntervalTo
        x-go-name: FilterStartIntervalTo
      - name: filter_participant_timeout_from
        in: query
        schema:
          type: string
          x-go-name: FilterParticipantTimeoutFrom
        x-go-name: FilterParticipantTimeoutFrom
      - name: filter_participant_timeout_to
        in: query
        schema:
          type: string
          x-go-name: FilterParticipantTimeoutTo
        x-go-name: FilterParticipantTimeoutTo
      - name: filter_active
        in: query
        schema:
          type: string
          x-go-name: FilterActive
        x-go-name: FilterActive
      responses:
        200:
          description: |-
            RunsResponse is response format that contains pagination info and results
            corresponding to query
          content:
            application/json:
              schema:
                type: object
                properties:
                  filter:
                    $ref: '#/components/schemas/Filterer'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Run'
                    x-go-name: Results
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/runs/{runID}/:
    get:
      tags:
      - projectrun
      summary: Read project test run info
      description: |-
        This endpoint retrieves project test run info. Project and run must
        be previously created
      operationId: readProjectRun
      parameters:
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: runID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: RunID
        x-go-name: RunID
      responses:
        200:
          description: RunBody
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunBody'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/runs/{runID}/participants/:
    get:
      tags:
      - projectrunparticipant
      summary: Get all existing project run participants for run
      description: This endpoint retrieves all project run participant info.
      operationId: readAllProjectRunParticipants
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Limit
        x-go-name: Limit
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Offset
        x-go-name: Offset
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: runID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: RunID
        x-go-name: RunID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: filter_browser
        in: query
        schema:
          type: string
          x-go-name: FilterBrowser
        x-go-name: FilterBrowser
      - name: filter_network
        in: query
        schema:
          type: string
          x-go-name: FilterNetwork
        x-go-name: FilterNetwork
      - name: filter_location
        in: query
        schema:
          type: string
          x-go-name: FilterLocation
        x-go-name: FilterLocation
      - name: filter_media_type
        in: query
        schema:
          type: string
          x-go-name: FilterMediaType
        x-go-name: FilterMediaType
      - name: filter_video_feed
        in: query
        schema:
          type: string
          x-go-name: FilterVideoFeed
        x-go-name: FilterVideoFeed
      - name: filter_audio_feed
        in: query
        schema:
          type: string
          x-go-name: FilterAudioFeed
        x-go-name: FilterAudioFeed
      - name: filter_name
        in: query
        schema:
          type: string
          x-go-name: FilterName
        x-go-name: FilterName
      - name: filter_num_from
        in: query
        schema:
          type: string
          x-go-name: FilterNumFrom
        x-go-name: FilterNumFrom
      - name: filter_num_to
        in: query
        schema:
          type: string
          x-go-name: FilterNumTo
        x-go-name: FilterNumTo
      - name: filter_group_name
        in: query
        schema:
          type: string
          x-go-name: FilterGroupName
        x-go-name: FilterGroupName
      - name: filter_group_num_from
        in: query
        schema:
          type: string
          x-go-name: FilterGroupNumFrom
        x-go-name: FilterGroupNumFrom
      - name: filter_group_num_to
        in: query
        schema:
          type: string
          x-go-name: FilterGroupNumTo
        x-go-name: FilterGroupNumTo
      - name: filter_record_audio
        in: query
        schema:
          type: string
          x-go-name: FilterRecordAudio
        x-go-name: FilterRecordAudio
      responses:
        200:
          description: |-
            RunParticipantResponse is response format that contains pagination info
            and results corresponding to query
          content:
            application/json:
              schema:
                type: object
                properties:
                  filter:
                    $ref: '#/components/schemas/Filterer'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/RunParticipantBody'
                    x-go-name: Results
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/runs/{runID}/participants/{runParticipantID}/:
    get:
      tags:
      - projectrunparticipant
      summary: Get existing project run participant
      description: |-
        This endpoint retrieves project run participant info. Run, run
        participant must be previously created
      operationId: readProjectRunParticipant
      parameters:
      - name: runParticipantID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: RunParticipantID
        x-go-name: RunParticipantID
      - name: runID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: RunID
        x-go-name: RunID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      responses:
        200:
          description: RunParticipantBody
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunParticipantBody'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/runs/{runID}/results/:
    get:
      tags:
      - projectresult
      summary: Read all project run results
      description: |-
        This endpoint retrieves all project run results. Project, run must be
        previously created and run has to be finished in order to get results
      operationId: readAllProjectResults
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Limit
        x-go-name: Limit
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Offset
        x-go-name: Offset
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: runID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: RunID
        x-go-name: RunID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: filter_browser
        in: query
        schema:
          type: string
          x-go-name: FilterBrowser
        x-go-name: FilterBrowser
      - name: filter_network
        in: query
        schema:
          type: string
          x-go-name: FilterNetwork
        x-go-name: FilterNetwork
      - name: filter_location
        in: query
        schema:
          type: string
          x-go-name: FilterLocation
        x-go-name: FilterLocation
      - name: filter_media_type
        in: query
        schema:
          type: string
          x-go-name: FilterMediaType
        x-go-name: FilterMediaType
      - name: filter_video_feed
        in: query
        schema:
          type: string
          x-go-name: FilterVideoFeed
        x-go-name: FilterVideoFeed
      - name: filter_audio_feed
        in: query
        schema:
          type: string
          x-go-name: FilterAudioFeed
        x-go-name: FilterAudioFeed
      - name: filter_name
        in: query
        schema:
          type: string
          x-go-name: FilterName
        x-go-name: FilterName
      - name: filter_num_from
        in: query
        schema:
          type: string
          x-go-name: FilterNumFrom
        x-go-name: FilterNumFrom
      - name: filter_num_to
        in: query
        schema:
          type: string
          x-go-name: FilterNumTo
        x-go-name: FilterNumTo
      - name: filter_group_name
        in: query
        schema:
          type: string
          x-go-name: FilterGroupName
        x-go-name: FilterGroupName
      - name: filter_group_num_from
        in: query
        schema:
          type: string
          x-go-name: FilterGroupNumFrom
        x-go-name: FilterGroupNumFrom
      - name: filter_group_num_to
        in: query
        schema:
          type: string
          x-go-name: FilterGroupNumTo
        x-go-name: FilterGroupNumTo
      - name: filter_record_audio
        in: query
        schema:
          type: string
          x-go-name: FilterRecordAudio
        x-go-name: FilterRecordAudio
      - name: filter_start_from
        in: query
        schema:
          type: string
          x-go-name: FilterStartFrom
        x-go-name: FilterStartFrom
      - name: filter_start_to
        in: query
        schema:
          type: string
          x-go-name: FilterStartTo
        x-go-name: FilterStartTo
      - name: filter_end_from
        in: query
        schema:
          type: string
          x-go-name: FilterEndFrom
        x-go-name: FilterEndFrom
      - name: filter_end_to
        in: query
        schema:
          type: string
          x-go-name: FilterEndTo
        x-go-name: FilterEndTo
      - name: filter_status
        in: query
        schema:
          type: string
          x-go-name: FilterStatus
        x-go-name: FilterStatus
      - name: filter_selenium_result
        in: query
        schema:
          type: string
          x-go-name: FilterSeleniumResult
        x-go-name: FilterSeleniumResult
      - name: filter_done
        in: query
        schema:
          type: string
          x-go-name: FilterDone
        x-go-name: FilterDone
      responses:
        200:
          description: |-
            RunResultResponse is response format that contains pagination info and
            results corresponding to query
          content:
            application/json:
              schema:
                type: object
                properties:
                  filter:
                    $ref: '#/components/schemas/Filterer'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Overview'
                    x-go-name: Result
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        409:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/runs/{runID}/results/statistics/:
    get:
      tags:
      - projectresult
      summary: Read all project result statistics
      description: |-
        This endpoint retrieves all project result statisctics. Project and run
        must be previously created
      operationId: readProjectResultStatistics
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: runID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: RunID
        x-go-name: RunID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      responses:
        200:
          description: |-
            StatisticsResponse is response format that contains assert overview and
            machine statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  asserts:
                    type: array
                    items:
                      $ref: '#/components/schemas/assertOverview'
                    x-go-name: Asserts
                  machine_stats:
                    $ref: '#/components/schemas/MachineStats'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        409:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/runs/{runID}/results/{resultID}/:
    get:
      tags:
      - projectresult
      summary: Read single project run result
      description: |-
        This endpoint retrieves single project run result info. Project, run and
        result must be previously created
      operationId: readProjectResult
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: resultID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ResultID
        x-go-name: ResultID
      - name: runID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: RunID
        x-go-name: RunID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      responses:
        200:
          description: ExtendedResult
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedResult'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        409:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/tests/:
    get:
      tags:
      - test
      summary: Get all existing tests for project
      description: This endpoint retrieves all test info. Project must be previously
        created
      operationId: readAllTests
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Limit
        x-go-name: Limit
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Offset
        x-go-name: Offset
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: filter_name
        in: query
        schema:
          type: string
          x-go-name: FilterName
        x-go-name: FilterName
      - name: filter_test_mode
        in: query
        schema:
          type: string
          x-go-name: FilterTestMode
        x-go-name: FilterTestMode
      - name: filter_increment_strategy
        in: query
        schema:
          type: string
          x-go-name: FilterIncrementStrategy
        x-go-name: FilterIncrementStrategy
      - name: filter_start_interval_from
        in: query
        schema:
          type: string
          x-go-name: FilterStartIntervalFrom
        x-go-name: FilterStartIntervalFrom
      - name: filter_start_interval_to
        in: query
        schema:
          type: string
          x-go-name: FilterStartIntervalTo
        x-go-name: FilterStartIntervalTo
      - name: filter_participant_timeout_from
        in: query
        schema:
          type: string
          x-go-name: FilterParticipantTimeoutFrom
        x-go-name: FilterParticipantTimeoutFrom
      - name: filter_participant_timeout_to
        in: query
        schema:
          type: string
          x-go-name: FilterParticipantTimeoutTo
        x-go-name: FilterParticipantTimeoutTo
      responses:
        200:
          description: |-
            TestsResponse is response format that contains pagination info and
            results corresponding to query
          content:
            application/json:
              schema:
                type: object
                properties:
                  filter:
                    $ref: '#/components/schemas/Filterer'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Test'
                    x-go-name: Results
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
    post:
      tags:
      - test
      summary: Create new test
      description: This endpoint creates new test with given data.
      operationId: createTest
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: id
        in: query
        description: 'readonly: true'
        schema:
          type: integer
          format: int64
          x-go-name: ID
        x-go-name: ID
      - name: created
        in: query
        description: 'readonly: true'
        schema:
          type: string
          format: date-time
          x-go-name: Created
        x-go-name: Created
      - name: updated
        in: query
        description: 'readonly: true'
        schema:
          type: string
          format: date-time
          x-go-name: Updated
        x-go-name: Updated
      - name: project_id
        in: query
        description: 'readonly: true'
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: name
        in: query
        required: true
        schema:
          type: string
          x-go-name: Name
        x-go-name: Name
      - name: script_file_id
        in: query
        description: 'readonly: true'
        schema:
          type: integer
          format: int64
          x-go-name: ScriptFileID
        x-go-name: ScriptFileID
      - name: start_interval
        in: query
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: StartInterval
        x-go-name: StartInterval
      - name: participant_timeout
        in: query
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ParticipantTimeout
        x-go-name: ParticipantTimeout
      - name: mode
        in: query
        required: true
        schema:
          type: string
          format: string
          x-go-name: Mode
        x-go-name: Mode
      - name: increment_strategy
        in: query
        required: true
        schema:
          type: string
          format: string
          x-go-name: IncrementStrategy
        x-go-name: IncrementStrategy
      - name: deleted
        in: query
        description: 'readonly: true'
        schema:
          type: boolean
          x-go-name: Deleted
        x-go-name: Deleted
      - name: group_count
        in: query
        description: 'readonly: true'
        schema:
          type: integer
          format: int64
          x-go-name: GroupCount
        x-go-name: GroupCount
      - name: participant_count
        in: query
        description: 'readonly: true'
        schema:
          type: integer
          format: int64
          x-go-name: ParticipantCount
        x-go-name: ParticipantCount
      - name: script
        in: query
        required: true
        schema:
          type: string
          x-go-name: Script
        x-go-name: Script
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      responses:
        201:
          description: Test
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        413:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        422:
          description: validationResponse will be sent in case a validation fails.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/tests/{testID}/:
    get:
      tags:
      - test
      summary: Read test info
      description: |-
        This endpoint retrieves test info. Project and test must be previously
        created
      operationId: readTest
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      responses:
        200:
          description: Test
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
    put:
      tags:
      - test
      summary: Update existing test
      description: |-
        This endpoint updates test with given properties. Project and test must
        be previously created
      operationId: updateTest
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: id
        in: query
        description: 'readonly: true'
        schema:
          type: integer
          format: int64
          x-go-name: ID
        x-go-name: ID
      - name: created
        in: query
        description: 'readonly: true'
        schema:
          type: string
          format: date-time
          x-go-name: Created
        x-go-name: Created
      - name: updated
        in: query
        description: 'readonly: true'
        schema:
          type: string
          format: date-time
          x-go-name: Updated
        x-go-name: Updated
      - name: project_id
        in: query
        description: 'readonly: true'
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: name
        in: query
        required: true
        schema:
          type: string
          x-go-name: Name
        x-go-name: Name
      - name: script_file_id
        in: query
        description: 'readonly: true'
        schema:
          type: integer
          format: int64
          x-go-name: ScriptFileID
        x-go-name: ScriptFileID
      - name: start_interval
        in: query
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: StartInterval
        x-go-name: StartInterval
      - name: participant_timeout
        in: query
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ParticipantTimeout
        x-go-name: ParticipantTimeout
      - name: mode
        in: query
        required: true
        schema:
          type: string
          format: string
          x-go-name: Mode
        x-go-name: Mode
      - name: increment_strategy
        in: query
        required: true
        schema:
          type: string
          format: string
          x-go-name: IncrementStrategy
        x-go-name: IncrementStrategy
      - name: deleted
        in: query
        description: 'readonly: true'
        schema:
          type: boolean
          x-go-name: Deleted
        x-go-name: Deleted
      - name: group_count
        in: query
        description: 'readonly: true'
        schema:
          type: integer
          format: int64
          x-go-name: GroupCount
        x-go-name: GroupCount
      - name: participant_count
        in: query
        description: 'readonly: true'
        schema:
          type: integer
          format: int64
          x-go-name: ParticipantCount
        x-go-name: ParticipantCount
      - name: script
        in: query
        required: true
        schema:
          type: string
          x-go-name: Script
        x-go-name: Script
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      responses:
        200:
          description: Test
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        413:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        422:
          description: validationResponse will be sent in case a validation fails.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
    delete:
      tags:
      - test
      summary: Delete existing test
      description: This endpoint deletes test. Project and test must be previously
        created
      operationId: deleteTest
      parameters:
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      responses:
        204:
          description: EmptyResponse will be sent in case there is no data to return
            to user.
          content: {}
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        409:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/tests/{testID}/asserts/:
    get:
      tags:
      - assert
      summary: Get all existing asserts for test
      description: This endpoint retrieves all assert info. Test must be previously
        created
      operationId: readAllAsserts
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Limit
        x-go-name: Limit
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Offset
        x-go-name: Offset
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: filter_path
        in: query
        schema:
          type: string
          x-go-name: FilterPath
        x-go-name: FilterPath
      - name: filter_operator
        in: query
        schema:
          type: string
          x-go-name: FilterOperator
        x-go-name: FilterOperator
      - name: filter_expected
        in: query
        schema:
          type: string
          x-go-name: FilterExpected
        x-go-name: FilterExpected
      responses:
        200:
          description: |-
            AssertsResponse is response format that contains pagination info and
            results corresponding to query
          content:
            application/json:
              schema:
                type: object
                properties:
                  filter:
                    $ref: '#/components/schemas/Filterer'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/fullAssert'
                    x-go-name: Results
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
    post:
      tags:
      - assert
      summary: Create new assert
      description: This endpoint creates new assert with given data.
      operationId: createAssert
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assert'
        required: false
      responses:
        201:
          description: Assert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assert'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        413:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        422:
          description: validationResponse will be sent in case a validation fails.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: assert
  /projects/{projectID}/tests/{testID}/asserts/{assertID}/:
    get:
      tags:
      - assert
      summary: Read assert info
      description: |-
        This endpoint retrieves assert info. Test and assert must be previously
        created
      operationId: readAssert
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: assertID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: AssertID
        x-go-name: AssertID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      responses:
        200:
          description: Assert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assert'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
    put:
      tags:
      - assert
      summary: Update existing assert
      description: |-
        This endpoint updates assert with given properties. Test and assert must
        be previously created
      operationId: updateAssert
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: assertID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: AssertID
        x-go-name: AssertID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assert'
        required: false
      responses:
        200:
          description: Assert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assert'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        413:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        422:
          description: validationResponse will be sent in case a validation fails.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: assert
    delete:
      tags:
      - assert
      summary: Delete existing assert
      description: This endpoint deletes assert. Test and assert must be previously
        created
      operationId: deleteAssert
      parameters:
      - name: assertID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: AssertID
        x-go-name: AssertID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      responses:
        204:
          description: EmptyResponse will be sent in case there is no data to return
            to user.
          content: {}
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/tests/{testID}/asserts/{assertID}/copy/:
    post:
      tags:
      - assert
      summary: Duplicate existing assert
      description: |-
        This endpoint duplicates given assert. Test and assert must be previously
        created.
      operationId: duplicateAssert
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: assertID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: AssertID
        x-go-name: AssertID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      responses:
        200:
          description: Assert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assert'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/tests/{testID}/asserts/{assertID}/preconditions/:
    get:
      tags:
      - precondition
      summary: Get all existing assert preconditions for assert
      description: |-
        This endpoint retrieves all assert precodndition info. Assert must be
        previously created
      operationId: readAllPreconditions
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Limit
        x-go-name: Limit
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Offset
        x-go-name: Offset
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: assertID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: AssertID
        x-go-name: AssertID
      - name: filter_property
        in: query
        schema:
          type: string
          x-go-name: FilterProperty
        x-go-name: FilterProperty
      - name: filter_operator
        in: query
        schema:
          type: string
          x-go-name: FilterOperator
        x-go-name: FilterOperator
      - name: filter_expected
        in: query
        schema:
          type: string
          x-go-name: FilterExpected
        x-go-name: FilterExpected
      responses:
        200:
          description: |-
            PreconditionResponse is response format that contains pagination info
            and results corresponding to query
          content:
            application/json:
              schema:
                type: object
                properties:
                  filter:
                    $ref: '#/components/schemas/Filterer'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/AssertPrecondition'
                    x-go-name: Results
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
    post:
      tags:
      - precondition
      summary: Create new assert precondition
      description: This endpoint creates new assert precondition with given data.
      operationId: createPrecondition
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: assertID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: AssertID
        x-go-name: AssertID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssertPrecondition'
        required: false
      responses:
        201:
          description: AssertPrecondition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssertPrecondition'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        413:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        422:
          description: validationResponse will be sent in case a validation fails.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: precondition
  /projects/{projectID}/tests/{testID}/asserts/{assertID}/preconditions/{preconditionID}/:
    get:
      tags:
      - precondition
      summary: Read assert precondition info
      description: |-
        This endpoint retrieves assert precondition info. Assert and precondition
        must be previously created
      operationId: readPrecondition
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: preconditionID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: PreconditionID
        x-go-name: PreconditionID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: assertID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: AssertID
        x-go-name: AssertID
      responses:
        200:
          description: AssertPrecondition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssertPrecondition'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
    put:
      tags:
      - precondition
      summary: Update existing assert precondition
      description: |-
        This endpoint updates assert precondition with given properties. Assert
        and precondition must be previously created
      operationId: updatePrecondition
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: preconditionID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: PreconditionID
        x-go-name: PreconditionID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: assertID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: AssertID
        x-go-name: AssertID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssertPrecondition'
        required: false
      responses:
        200:
          description: AssertPrecondition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssertPrecondition'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        413:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        422:
          description: validationResponse will be sent in case a validation fails.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: precondition
    delete:
      tags:
      - precondition
      summary: Delete existing assert precondition
      description: |-
        This endpoint deletes assert precondition. Assert and precondition must
        be previously created
      operationId: deletePrecondition
      parameters:
      - name: preconditionID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: PreconditionID
        x-go-name: PreconditionID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: assertID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: AssertID
        x-go-name: AssertID
      responses:
        204:
          description: EmptyResponse will be sent in case there is no data to return
            to user.
          content: {}
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/tests/{testID}/copy/:
    post:
      tags:
      - test
      summary: Duplicate existing test
      description: |-
        This endpoint duplicates given test. If no copy name is provided an
        "Copy of" prefix will be applied to the test name. Project and test must
        be previously created.
      operationId: duplicateTest
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  x-go-name: Name
        required: false
      responses:
        200:
          description: Test
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: Body
  /projects/{projectID}/tests/{testID}/groups/:
    get:
      tags:
      - group
      summary: Get all existing groups for test
      description: This endpoint retrieves all group info. Test must be previously
        created
      operationId: readAllGroups
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Limit
        x-go-name: Limit
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Offset
        x-go-name: Offset
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: filter_name
        in: query
        schema:
          type: string
          x-go-name: FilterName
        x-go-name: FilterName
      - name: filter_count_from
        in: query
        schema:
          type: string
          x-go-name: FilterCountFrom
        x-go-name: FilterCountFrom
      - name: filter_count_to
        in: query
        schema:
          type: string
          x-go-name: FilterCountTo
        x-go-name: FilterCountTo
      responses:
        200:
          description: |-
            GroupsResponse is response format that contains pagination info and
            results corresponding to query
          content:
            application/json:
              schema:
                type: object
                properties:
                  filter:
                    $ref: '#/components/schemas/Filterer'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Group'
                    x-go-name: Results
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
    post:
      tags:
      - group
      summary: Create new group
      description: This endpoint creates new group with given data.
      operationId: createGroup
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: false
      responses:
        201:
          description: Group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        413:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        422:
          description: validationResponse will be sent in case a validation fails.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: group
  /projects/{projectID}/tests/{testID}/groups/{groupID}/:
    get:
      tags:
      - group
      summary: Read group info
      description: |-
        This endpoint retrieves group info. Test and group must be previously
        created
      operationId: readGroup
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: groupID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: GroupID
        x-go-name: GroupID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      responses:
        200:
          description: Group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
    put:
      tags:
      - group
      summary: Update existing group
      description: |-
        This endpoint updates group with given properties. Test and group must
        be previously created
      operationId: updateGroup
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: groupID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: GroupID
        x-go-name: GroupID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: false
      responses:
        200:
          description: Group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        413:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        422:
          description: validationResponse will be sent in case a validation fails.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: group
    delete:
      tags:
      - group
      summary: Delete existing group
      description: This endpoint deletes group. Test and group must be previously
        created
      operationId: deleteGroup
      parameters:
      - name: groupID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: GroupID
        x-go-name: GroupID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      responses:
        204:
          description: EmptyResponse will be sent in case there is no data to return
            to user.
          content: {}
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/tests/{testID}/groups/{groupID}/copy/:
    post:
      tags:
      - group
      summary: Duplicate existing group
      description: |-
        This endpoint duplicates given group. If no copy name is provided an
        "Copy of" prefix will be applied to the group name. Test and group must
        be previously created.
      operationId: duplicateGroup
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: groupID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: GroupID
        x-go-name: GroupID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  x-go-name: Name
        required: false
      responses:
        200:
          description: Group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: Body
  /projects/{projectID}/tests/{testID}/groups/{groupID}/participants/:
    get:
      tags:
      - groupparticipants
      summary: Get all existing group participants for group.
      description: This endpoint retrieves all group participant info.
      operationId: readAllGroupParticipants
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Limit
        x-go-name: Limit
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Offset
        x-go-name: Offset
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: groupID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: GroupID
        x-go-name: GroupID
      - name: filter_browser
        in: query
        schema:
          type: string
          x-go-name: FilterBrowser
        x-go-name: FilterBrowser
      - name: filter_network
        in: query
        schema:
          type: string
          x-go-name: FilterNetwork
        x-go-name: FilterNetwork
      - name: filter_location
        in: query
        schema:
          type: string
          x-go-name: FilterLocation
        x-go-name: FilterLocation
      - name: filter_media_type
        in: query
        schema:
          type: string
          x-go-name: FilterMediaType
        x-go-name: FilterMediaType
      - name: filter_video_feed
        in: query
        schema:
          type: string
          x-go-name: FilterVideoFeed
        x-go-name: FilterVideoFeed
      - name: filter_audio_feed
        in: query
        schema:
          type: string
          x-go-name: FilterAudioFeed
        x-go-name: FilterAudioFeed
      - name: filter_name
        in: query
        schema:
          type: string
          x-go-name: FilterName
        x-go-name: FilterName
      - name: filter_count_from
        in: query
        schema:
          type: string
          x-go-name: FilterCountFrom
        x-go-name: FilterCountFrom
      - name: filter_count_to
        in: query
        schema:
          type: string
          x-go-name: FilterCountTo
        x-go-name: FilterCountTo
      - name: filter_compute_unit
        in: query
        schema:
          type: string
          x-go-name: FilterComputeUnit
        x-go-name: FilterComputeUnit
      - name: filter_has_group
        in: query
        schema:
          type: string
          x-go-name: FilterHasGroup
        x-go-name: FilterHasGroup
      - name: filter_record_audio
        in: query
        schema:
          type: string
          x-go-name: FilterRecordAudio
        x-go-name: FilterRecordAudio
      responses:
        200:
          description: |-
            ParticipantsResponse is response format that contains pagination info and
            results corresponding to query
          content:
            application/json:
              schema:
                type: object
                properties:
                  filter:
                    $ref: '#/components/schemas/Filterer'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ParticipantBody'
                    x-go-name: Results
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
    post:
      tags:
      - groupparticipants
      summary: Create new group participant.
      description: This endpoint creates new group participant with given properties.
      operationId: createGroupParticipant
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: groupID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: GroupID
        x-go-name: GroupID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupParticipantBody'
        required: false
      responses:
        201:
          description: GroupParticipantBody
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupParticipantBody'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        413:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        422:
          description: validationResponse will be sent in case a validation fails.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: participant
  /projects/{projectID}/tests/{testID}/groups/{groupID}/participants/{participantID}/:
    get:
      tags:
      - groupparticipants
      summary: Get existing group participant.
      description: This endpoint retrieves group participant info.
      operationId: readGroupParticipant
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: participantID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ParticipantID
        x-go-name: ParticipantID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: groupID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: GroupID
        x-go-name: GroupID
      responses:
        200:
          description: GroupParticipantBody
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupParticipantBody'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
    put:
      tags:
      - groupparticipants
      summary: Update existing group participant.
      description: This endpoint updates group participant with given properties.
      operationId: updateGroupParticipant
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: participantID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ParticipantID
        x-go-name: ParticipantID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: groupID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: GroupID
        x-go-name: GroupID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupParticipantBody'
        required: false
      responses:
        200:
          description: GroupParticipantBody
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupParticipantBody'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        413:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        422:
          description: validationResponse will be sent in case a validation fails.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: participant
    delete:
      tags:
      - groupparticipants
      summary: Delete existing group participant.
      description: This endpoint deletes group participant.
      operationId: deleteGroupParticipant
      parameters:
      - name: participantID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ParticipantID
        x-go-name: ParticipantID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: groupID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: GroupID
        x-go-name: GroupID
      responses:
        204:
          description: EmptyResponse will be sent in case there is no data to return
            to user.
          content: {}
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/tests/{testID}/groups/{groupID}/participants/{participantID}/copy/:
    post:
      tags:
      - groupparticipants
      summary: Duplicate existing group participant.
      description: |-
        This endpoint duplicates given group participant. If no copy name is
        provided an "Copy of" prefix will be applied to the participant name.
      operationId: duplicateGroupParticipant
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: participantID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ParticipantID
        x-go-name: ParticipantID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: groupID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: GroupID
        x-go-name: GroupID
      responses:
        200:
          description: GroupParticipantBody
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupParticipantBody'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/tests/{testID}/participants/:
    get:
      tags:
      - participants
      summary: Get all existing participants for test.
      description: This endpoint retrieves all participant info.
      operationId: readAllParticipants
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Limit
        x-go-name: Limit
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Offset
        x-go-name: Offset
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: filter_browser
        in: query
        schema:
          type: string
          x-go-name: FilterBrowser
        x-go-name: FilterBrowser
      - name: filter_network
        in: query
        schema:
          type: string
          x-go-name: FilterNetwork
        x-go-name: FilterNetwork
      - name: filter_location
        in: query
        schema:
          type: string
          x-go-name: FilterLocation
        x-go-name: FilterLocation
      - name: filter_media_type
        in: query
        schema:
          type: string
          x-go-name: FilterMediaType
        x-go-name: FilterMediaType
      - name: filter_video_feed
        in: query
        schema:
          type: string
          x-go-name: FilterVideoFeed
        x-go-name: FilterVideoFeed
      - name: filter_audio_feed
        in: query
        schema:
          type: string
          x-go-name: FilterAudioFeed
        x-go-name: FilterAudioFeed
      - name: filter_name
        in: query
        schema:
          type: string
          x-go-name: FilterName
        x-go-name: FilterName
      - name: filter_count_from
        in: query
        schema:
          type: string
          x-go-name: FilterCountFrom
        x-go-name: FilterCountFrom
      - name: filter_count_to
        in: query
        schema:
          type: string
          x-go-name: FilterCountTo
        x-go-name: FilterCountTo
      - name: filter_compute_unit
        in: query
        schema:
          type: string
          x-go-name: FilterComputeUnit
        x-go-name: FilterComputeUnit
      - name: filter_has_group
        in: query
        schema:
          type: string
          x-go-name: FilterHasGroup
        x-go-name: FilterHasGroup
      - name: filter_record_audio
        in: query
        schema:
          type: string
          x-go-name: FilterRecordAudio
        x-go-name: FilterRecordAudio
      responses:
        200:
          description: |-
            ParticipantsResponse is response format that contains pagination info and
            results corresponding to query
          content:
            application/json:
              schema:
                type: object
                properties:
                  filter:
                    $ref: '#/components/schemas/Filterer'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ParticipantBody'
                    x-go-name: Results
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
    post:
      tags:
      - participants
      summary: Create new participant.
      description: This endpoint creates new participant with given properties.
      operationId: createParticipant
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantBody'
        required: false
      responses:
        201:
          description: ParticipantBody
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantBody'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        413:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        422:
          description: validationResponse will be sent in case a validation fails.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: participant
  /projects/{projectID}/tests/{testID}/participants/{participantID}/:
    get:
      tags:
      - participants
      summary: Get existing participant.
      description: This endpoint retrieves participant info.
      operationId: readParticipant
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: participantID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ParticipantID
        x-go-name: ParticipantID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      responses:
        200:
          description: ParticipantBody
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantBody'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
    put:
      tags:
      - participants
      summary: Update existing participant.
      description: This endpoint updates participant with given properties.
      operationId: updateParticipant
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: participantID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ParticipantID
        x-go-name: ParticipantID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantBody'
        required: false
      responses:
        200:
          description: ParticipantBody
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantBody'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        413:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        422:
          description: validationResponse will be sent in case a validation fails.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: participant
    delete:
      tags:
      - participants
      summary: Delete existing participant.
      description: This endpoint deletes participant.
      operationId: deleteParticipant
      parameters:
      - name: participantID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ParticipantID
        x-go-name: ParticipantID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      responses:
        204:
          description: EmptyResponse will be sent in case there is no data to return
            to user.
          content: {}
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/tests/{testID}/participants/{participantID}/copy/:
    post:
      tags:
      - participants
      summary: Duplicate existing participant
      description: |-
        This endpoint duplicates given participant. If no copy name is provided
        an "Copy of" prefix will be applied to the participant name. Group and
        participant must be previously created.
      operationId: duplicateParticipant
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: participantID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ParticipantID
        x-go-name: ParticipantID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  x-go-name: Name
        required: false
      responses:
        200:
          description: ParticipantBody
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantBody'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: Body
  /projects/{projectID}/tests/{testID}/runs/:
    get:
      tags:
      - run
      summary: Get all existing test runs for test
      description: |-
        This endpoint retrieves all test run info. Project and test must be
        previously created
      operationId: readAllTestRuns
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Limit
        x-go-name: Limit
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Offset
        x-go-name: Offset
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: filter_test_name
        in: query
        schema:
          type: string
          x-go-name: FilterName
        x-go-name: FilterName
      - name: filter_started_from
        in: query
        schema:
          type: string
          x-go-name: FilterStartedFrom
        x-go-name: FilterStartedFrom
      - name: filter_started_to
        in: query
        schema:
          type: string
          x-go-name: FilterStartedTo
        x-go-name: FilterStartedTo
      - name: filter_finished_from
        in: query
        schema:
          type: string
          x-go-name: FilterFinishedFrom
        x-go-name: FilterFinishedFrom
      - name: filter_finished_to
        in: query
        schema:
          type: string
          x-go-name: FilterFinishedTo
        x-go-name: FilterFinishedTo
      - name: filter_execution_started_from
        in: query
        schema:
          type: string
          x-go-name: FilterExecutionStartedFrom
        x-go-name: FilterExecutionStartedFrom
      - name: filter_execution_started_to
        in: query
        schema:
          type: string
          x-go-name: FilterExecutionStartedTo
        x-go-name: FilterExecutionStartedTo
      - name: filter_execution_finished_from
        in: query
        schema:
          type: string
          x-go-name: FilterExecutionFinishFrom
        x-go-name: FilterExecutionFinishFrom
      - name: filter_execution_finished_to
        in: query
        schema:
          type: string
          x-go-name: FilterExecutionFinishTo
        x-go-name: FilterExecutionFinishTo
      - name: filter_increment_strategy
        in: query
        schema:
          type: string
          x-go-name: FilterIncrementStrategy
        x-go-name: FilterIncrementStrategy
      - name: filter_status
        in: query
        schema:
          type: string
          x-go-name: FilterStatus
        x-go-name: FilterStatus
      - name: filter_test_mode
        in: query
        schema:
          type: string
          x-go-name: FilterTestMode
        x-go-name: FilterTestMode
      - name: filter_start_interval_from
        in: query
        schema:
          type: string
          x-go-name: FilterStartIntervalFrom
        x-go-name: FilterStartIntervalFrom
      - name: filter_start_interval_to
        in: query
        schema:
          type: string
          x-go-name: FilterStartIntervalTo
        x-go-name: FilterStartIntervalTo
      - name: filter_participant_timeout_from
        in: query
        schema:
          type: string
          x-go-name: FilterParticipantTimeoutFrom
        x-go-name: FilterParticipantTimeoutFrom
      - name: filter_participant_timeout_to
        in: query
        schema:
          type: string
          x-go-name: FilterParticipantTimeoutTo
        x-go-name: FilterParticipantTimeoutTo
      - name: filter_active
        in: query
        schema:
          type: string
          x-go-name: FilterActive
        x-go-name: FilterActive
      responses:
        200:
          description: |-
            RunsResponse is response format that contains pagination info and results
            corresponding to query
          content:
            application/json:
              schema:
                type: object
                properties:
                  filter:
                    $ref: '#/components/schemas/Filterer'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Run'
                    x-go-name: Results
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
    post:
      tags:
      - run
      summary: Create and launch new test run
      description: |-
        This endpoint starts test execution. Project and test must be previously
        created
      operationId: createTestRun
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      responses:
        202:
          description: Run
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        409:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/tests/{testID}/runs/{runID}/:
    get:
      tags:
      - run
      summary: Read test run info
      description: |-
        This endpoint retrieves test run info. Project, test and run must be
        previously created
      operationId: readTestRun
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: runID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: RunID
        x-go-name: RunID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      responses:
        200:
          description: RunBody
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunBody'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/tests/{testID}/runs/{runID}/participants/:
    get:
      tags:
      - runparticipant
      summary: Get all existing test run participants for run
      description: This endpoint retrieves all test run participant info.
      operationId: readAllTestRunParticipants
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Limit
        x-go-name: Limit
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Offset
        x-go-name: Offset
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: runID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: RunID
        x-go-name: RunID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: filter_browser
        in: query
        schema:
          type: string
          x-go-name: FilterBrowser
        x-go-name: FilterBrowser
      - name: filter_network
        in: query
        schema:
          type: string
          x-go-name: FilterNetwork
        x-go-name: FilterNetwork
      - name: filter_location
        in: query
        schema:
          type: string
          x-go-name: FilterLocation
        x-go-name: FilterLocation
      - name: filter_media_type
        in: query
        schema:
          type: string
          x-go-name: FilterMediaType
        x-go-name: FilterMediaType
      - name: filter_video_feed
        in: query
        schema:
          type: string
          x-go-name: FilterVideoFeed
        x-go-name: FilterVideoFeed
      - name: filter_audio_feed
        in: query
        schema:
          type: string
          x-go-name: FilterAudioFeed
        x-go-name: FilterAudioFeed
      - name: filter_name
        in: query
        schema:
          type: string
          x-go-name: FilterName
        x-go-name: FilterName
      - name: filter_num_from
        in: query
        schema:
          type: string
          x-go-name: FilterNumFrom
        x-go-name: FilterNumFrom
      - name: filter_num_to
        in: query
        schema:
          type: string
          x-go-name: FilterNumTo
        x-go-name: FilterNumTo
      - name: filter_group_name
        in: query
        schema:
          type: string
          x-go-name: FilterGroupName
        x-go-name: FilterGroupName
      - name: filter_group_num_from
        in: query
        schema:
          type: string
          x-go-name: FilterGroupNumFrom
        x-go-name: FilterGroupNumFrom
      - name: filter_group_num_to
        in: query
        schema:
          type: string
          x-go-name: FilterGroupNumTo
        x-go-name: FilterGroupNumTo
      - name: filter_record_audio
        in: query
        schema:
          type: string
          x-go-name: FilterRecordAudio
        x-go-name: FilterRecordAudio
      responses:
        200:
          description: |-
            RunParticipantResponse is response format that contains pagination info
            and results corresponding to query
          content:
            application/json:
              schema:
                type: object
                properties:
                  filter:
                    $ref: '#/components/schemas/Filterer'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/RunParticipantBody'
                    x-go-name: Results
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/tests/{testID}/runs/{runID}/participants/{runParticipantID}/:
    get:
      tags:
      - runparticipant
      summary: Get existing test run participant
      description: |-
        This endpoint retrieves test run participant info. Run, run participant
        must be previously created
      operationId: readTestRunParticipant
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: runParticipantID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: RunParticipantID
        x-go-name: RunParticipantID
      - name: runID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: RunID
        x-go-name: RunID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      responses:
        200:
          description: RunParticipantBody
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunParticipantBody'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/tests/{testID}/runs/{runID}/results/:
    get:
      tags:
      - result
      summary: Read all test run results
      description: |-
        This endpoint retrieves all test run results. Project, test, run must be
        previously created and run has to be finished in order to get results
      operationId: readAllTestResults
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Limit
        x-go-name: Limit
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          x-go-name: Offset
        x-go-name: Offset
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: runID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: RunID
        x-go-name: RunID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      - name: filter_browser
        in: query
        schema:
          type: string
          x-go-name: FilterBrowser
        x-go-name: FilterBrowser
      - name: filter_network
        in: query
        schema:
          type: string
          x-go-name: FilterNetwork
        x-go-name: FilterNetwork
      - name: filter_location
        in: query
        schema:
          type: string
          x-go-name: FilterLocation
        x-go-name: FilterLocation
      - name: filter_media_type
        in: query
        schema:
          type: string
          x-go-name: FilterMediaType
        x-go-name: FilterMediaType
      - name: filter_video_feed
        in: query
        schema:
          type: string
          x-go-name: FilterVideoFeed
        x-go-name: FilterVideoFeed
      - name: filter_audio_feed
        in: query
        schema:
          type: string
          x-go-name: FilterAudioFeed
        x-go-name: FilterAudioFeed
      - name: filter_name
        in: query
        schema:
          type: string
          x-go-name: FilterName
        x-go-name: FilterName
      - name: filter_num_from
        in: query
        schema:
          type: string
          x-go-name: FilterNumFrom
        x-go-name: FilterNumFrom
      - name: filter_num_to
        in: query
        schema:
          type: string
          x-go-name: FilterNumTo
        x-go-name: FilterNumTo
      - name: filter_group_name
        in: query
        schema:
          type: string
          x-go-name: FilterGroupName
        x-go-name: FilterGroupName
      - name: filter_group_num_from
        in: query
        schema:
          type: string
          x-go-name: FilterGroupNumFrom
        x-go-name: FilterGroupNumFrom
      - name: filter_group_num_to
        in: query
        schema:
          type: string
          x-go-name: FilterGroupNumTo
        x-go-name: FilterGroupNumTo
      - name: filter_record_audio
        in: query
        schema:
          type: string
          x-go-name: FilterRecordAudio
        x-go-name: FilterRecordAudio
      - name: filter_start_from
        in: query
        schema:
          type: string
          x-go-name: FilterStartFrom
        x-go-name: FilterStartFrom
      - name: filter_start_to
        in: query
        schema:
          type: string
          x-go-name: FilterStartTo
        x-go-name: FilterStartTo
      - name: filter_end_from
        in: query
        schema:
          type: string
          x-go-name: FilterEndFrom
        x-go-name: FilterEndFrom
      - name: filter_end_to
        in: query
        schema:
          type: string
          x-go-name: FilterEndTo
        x-go-name: FilterEndTo
      - name: filter_status
        in: query
        schema:
          type: string
          x-go-name: FilterStatus
        x-go-name: FilterStatus
      - name: filter_selenium_result
        in: query
        schema:
          type: string
          x-go-name: FilterSeleniumResult
        x-go-name: FilterSeleniumResult
      - name: filter_done
        in: query
        schema:
          type: string
          x-go-name: FilterDone
        x-go-name: FilterDone
      responses:
        200:
          description: |-
            RunResultResponse is response format that contains pagination info and
            results corresponding to query
          content:
            application/json:
              schema:
                type: object
                properties:
                  filter:
                    $ref: '#/components/schemas/Filterer'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Overview'
                    x-go-name: Result
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        409:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/tests/{testID}/runs/{runID}/results/statistics/:
    get:
      tags:
      - result
      summary: Read all test result statistics
      description: |-
        This endpoint retrieves all test result statisctics. Project, test and
        run must be previously created
      operationId: readTestResultStatistics
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: runID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: RunID
        x-go-name: RunID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      responses:
        200:
          description: |-
            StatisticsResponse is response format that contains assert overview and
            machine statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  asserts:
                    type: array
                    items:
                      $ref: '#/components/schemas/assertOverview'
                    x-go-name: Asserts
                  machine_stats:
                    $ref: '#/components/schemas/MachineStats'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        409:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/tests/{testID}/runs/{runID}/results/{resultID}/:
    get:
      tags:
      - result
      summary: Read single test run result
      description: |-
        This endpoint retrieves single test run result info. Project, test, run
        and result must be previously created
      operationId: readTestResult
      parameters:
      - name: describe
        in: query
        schema:
          type: string
          x-go-name: Describe
        x-go-name: Describe
      - name: resultID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ResultID
        x-go-name: ResultID
      - name: runID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: RunID
        x-go-name: RunID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      responses:
        200:
          description: ExtendedResult
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedResult'
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        409:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /projects/{projectID}/tests/{testID}/runs/{runID}/stop/:
    post:
      tags:
      - run
      summary: Stop test run
      description: |-
        This endpoint stops test run. Project, test and run must be
        previously created. Test run needs to be in progress.
      operationId: stopTestRun
      parameters:
      - name: runID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: RunID
        x-go-name: RunID
      - name: testID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: TestID
        x-go-name: TestID
      - name: projectID
        in: path
        required: true
        schema:
          type: integer
          format: int64
          x-go-name: ProjectID
        x-go-name: ProjectID
      responses:
        202:
          description: EmptyResponse will be sent in case there is no data to return
            to user.
          content: {}
        204:
          description: EmptyResponse will be sent in case there is no data to return
            to user.
          content: {}
        400:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /statics/:
    get:
      tags:
      - static
      summary: Read all static resource info
      description: This endpoint retrieves all static resource info
      operationId: readAllStatics
      responses:
        200:
          description: |-
            StaticsResponse is response format that contains all static resource
            information
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/BaseClassificator'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /statics/metric_path/:
    get:
      tags:
      - static
      summary: Read all metric path info
      description: This endpoint retrieves all available metric paths
      operationId: readMetricPath
      responses:
        200:
          description: MetricPathsResponse is list of available metric paths
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /statics/types/:
    get:
      tags:
      - static
      summary: Read all static type info
      description: This endpoint retrieves all static type info
      operationId: readAllStaticTypes
      responses:
        200:
          description: |-
            StaticTypesResponse is response format that contains all static type
            information
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
  /statics/{resource}/:
    get:
      tags:
      - static
      summary: Read all specified static resource info
      description: This endpoint retrieves all specified static resource info
      operationId: readStaticResource
      parameters:
      - name: resource
        in: path
        required: true
        schema:
          type: string
          x-go-name: Resource
        x-go-name: Resource
      responses:
        200:
          description: BaseClassificator
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseClassificator'
        401:
          description: |-
            UnauthorizedResponse will be sent in case an authorization error occurs
            and user is not authorized to access requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: |-
            ForbiddenResponse will be sent in case user lacks permission to access
            requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        503:
          description: errorResponse will be sent in case an error occurs during request
            processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - ApiKeyAuth: []
components:
  schemas:
    AWSInfo:
      title: AWSInfo describes single aws info instance with JSON field descriptions.
      required:
      - account_id
      - client_id
      type: object
      properties:
        account_id:
          type: string
          x-go-name: AccountID
        artifact_bucket:
          type: string
          readOnly: true
          x-go-name: ArtifactBucket
        client_id:
          type: string
          x-go-name: ClientID
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        log_bucket:
          type: string
          readOnly: true
          x-go-name: LogBucket
        status:
          type: string
          format: string
          readOnly: true
          x-go-name: Status
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      x-go-package: code.tdlbox.com/loadero/sdk/types/awsinfo
    Account:
      title: Account describes single account instance with JSON field descriptions.
      required:
      - email
      - first_name
      - last_name
      type: object
      properties:
        avatar:
          type: string
          format: string
          readOnly: true
          x-go-name: Avatar
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        email:
          type: string
          x-go-name: Email
        first_name:
          type: string
          x-go-name: FirstName
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        last_login:
          type: string
          format: date-time
          readOnly: true
          x-go-name: LastLogin
        last_name:
          type: string
          x-go-name: LastName
        superuser:
          type: boolean
          readOnly: true
          x-go-name: Superuser
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      x-go-package: code.tdlbox.com/loadero/sdk/types/account
    ArtifactInfo:
      title: ArtifactInfo contains single artifact type artifact URLs for single result.
      type: object
      properties:
        error:
          type: string
          x-go-name: Error
        paths:
          type: array
          items:
            type: string
          x-go-name: Paths
      x-go-package: code.tdlbox.com/loadero/sdk/types/resultartifact
    ArtifactsInfo:
      type: object
      properties:
        audio:
          $ref: '#/components/schemas/ArtifactInfo'
        downloads:
          $ref: '#/components/schemas/ArtifactInfo'
        screenshots:
          $ref: '#/components/schemas/ArtifactInfo'
        video:
          $ref: '#/components/schemas/ArtifactInfo'
      description: |-
        ArtifactsInfo contains all artifact URLs from single result for each
        corresponding artifact type. If error was present for a artifact type then
        URL paths for that artifact will be empty.
      x-go-package: code.tdlbox.com/loadero/sdk/types/resultartifact
    Assert:
      title: Assert describes single assert instance with JSON field descriptions.
      required:
      - expected
      - operator
      - path
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        expected:
          type: string
          x-go-name: Expected
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        operator:
          type: string
          format: string
          x-go-name: Operator
        path:
          type: string
          format: string
          x-go-name: Path
        test_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: TestID
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      x-go-package: code.tdlbox.com/loadero/sdk/types/assert
    AssertPrecondition:
      required:
      - expected
      - operator
      - property
      type: object
      properties:
        assert_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: AssertID
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        expected:
          type: string
          x-go-name: Expected
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        operator:
          type: string
          format: string
          x-go-name: Operator
        property:
          type: string
          format: string
          x-go-name: Property
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      description: |-
        AssertPrecondition describes single assert precondition instance with JSON
        field descriptions.
      x-go-package: code.tdlbox.com/loadero/sdk/types/assertprecondition
    AudioFeed:
      type: object
      properties:
        classificator:
          $ref: '#/components/schemas/ClassificatorType'
        description:
          type: string
          readOnly: true
          x-go-name: Description
        disabled:
          type: boolean
          readOnly: true
          x-go-name: Disabled
        name:
          type: string
          readOnly: true
          x-go-name: Name
        value:
          type: string
          readOnly: true
          x-go-name: Data
      description: |-
        AudioFeed is a concrete classificator value that is used to describe
        different audio feed values. Audio feed indicates the currently supported
        audio values.
      x-go-package: code.tdlbox.com/loadero/sdk/types/classificator
    Base:
      title: Base describes single run participant instance without generic fields.
      type: object
      properties:
        compute_unit:
          type: string
          format: string
          readOnly: true
          x-go-name: ComputeUnit
        group_name:
          type: string
          readOnly: true
          x-go-name: GroupName
        group_num:
          type: integer
          format: int64
          readOnly: true
          x-go-name: GroupNum
        participant_name:
          type: string
          readOnly: true
          x-go-name: ParticipantName
        participant_num:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ParticipantNum
        profile_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ProfileID
      x-go-package: code.tdlbox.com/loadero/sdk/types/runparticipant
    BaseClassificator:
      type: object
      properties:
        classificator:
          $ref: '#/components/schemas/ClassificatorType'
        description:
          type: string
          readOnly: true
          x-go-name: Description
        disabled:
          type: boolean
          readOnly: true
          x-go-name: Disabled
        name:
          type: string
          readOnly: true
          x-go-name: Name
        value:
          type: string
          readOnly: true
          x-go-name: Data
      description: |-
        BaseClassificator is exported wrapper for generic classificator type. This
        type should be used only to further extend capabilities of a classificator,
        and not used directly. In those cases prefer to use Classificator interface.
      x-go-package: code.tdlbox.com/loadero/sdk/types/classificator
    Browser:
      type: object
      properties:
        classificator:
          $ref: '#/components/schemas/ClassificatorType'
        description:
          type: string
          readOnly: true
          x-go-name: Description
        disabled:
          type: boolean
          readOnly: true
          x-go-name: Disabled
        name:
          type: string
          readOnly: true
          x-go-name: Name
        value:
          type: string
          readOnly: true
          x-go-name: Data
      description: |-
        Browser is a concrete classificator value that is used to describe different
        browser values. Browser lists currently supported browser types with
        currently supported versions.
      x-go-package: code.tdlbox.com/loadero/sdk/types/classificator
    ClassificatorType:
      title: ClassificatorType is grouping of classificators by their represented
        values.
      type: string
      description: nolint:golint,revive
      x-go-package: code.tdlbox.com/loadero/sdk/types/classificator
    Common:
      title: Common describes generic assert fields that are used in other assert
        types.
      required:
      - expected
      - operator
      - path
      type: object
      properties:
        expected:
          type: string
          x-go-name: Expected
        operator:
          type: string
          format: string
          x-go-name: Operator
        path:
          type: string
          format: string
          x-go-name: Path
      x-go-package: code.tdlbox.com/loadero/sdk/types/assert
    ComputeUnit:
      type: object
      properties:
        classificator:
          $ref: '#/components/schemas/ClassificatorType'
        description:
          type: string
          readOnly: true
          x-go-name: Description
        disabled:
          type: boolean
          readOnly: true
          x-go-name: Disabled
        name:
          type: string
          readOnly: true
          x-go-name: Name
        value:
          type: string
          readOnly: true
          x-go-name: Data
      description: |-
        ComputeUnit is a concrete classificator value that is used to describe
        different compute unit values. Compute unit lists currently supported compute
        unit types used in Loadero tests.
      x-go-package: code.tdlbox.com/loadero/sdk/types/classificator
    ComputeUnitUsage:
      title: ComputeUnitUsage describes compute unit usage for a single project.
      type: object
      properties:
        included:
          type: integer
          format: int64
          readOnly: true
          x-go-name: Included
        used:
          type: integer
          format: int64
          readOnly: true
          x-go-name: Used
      x-go-package: code.tdlbox.com/loadero/sdk/types/project
    ErrorResponse:
      title: ErrorResponse will be sent in case an error occurs during request processing.
      type: object
      properties:
        code:
          type: integer
          description: Status code of error
          format: int64
          x-go-name: Code
        error:
          type: string
          description: Error description
          x-go-name: Error
      x-go-package: code.tdlbox.com/loadero/sdk/sdkutil
    ExtendedResult:
      title: ExtendedResult describes single result instance with JSON field descriptions.
      type: object
      properties:
        aggregated_machine_statistics:
          $ref: '#/components/schemas/MachineStats'
        artifacts:
          $ref: '#/components/schemas/ArtifactsInfo'
        asserts:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ResultAssert'
          x-go-name: Asserts
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        end:
          type: string
          format: date-time
          readOnly: true
          x-go-name: End
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        log_paths:
          $ref: '#/components/schemas/ResultLog'
        machine_stats:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ResultResourceUsage'
          x-go-name: MachineStats
        metrics:
          $ref: '#/components/schemas/Metrics'
        participant_details:
          $ref: '#/components/schemas/RunParticipant'
        profile_params:
          $ref: '#/components/schemas/Params'
        run_participant_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: RunParticipantID
        selenium_result:
          type: string
          format: string
          readOnly: true
          x-go-name: SeleniumResult
        start:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Start
        status:
          type: string
          format: string
          readOnly: true
          x-go-name: Status
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      x-go-package: code.tdlbox.com/loadero/sdk/types/result
    File:
      title: File describes single file instance with JSON field descriptions.
      required:
      - content
      - file_type
      type: object
      properties:
        content:
          type: string
          x-go-name: Content
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        file_type:
          type: string
          format: string
          x-go-name: FileType
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        project_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ProjectID
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      x-go-package: code.tdlbox.com/loadero/sdk/types/file
    Filterer:
      title: Filterer interface describes filtering functionality for resources.
      type: object
      x-go-package: code.tdlbox.com/loadero/sdk/types
    Generic:
      title: Generic describes generic struct fields that are used in almost all types.
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      x-go-package: code.tdlbox.com/loadero/sdk/types
    Group:
      title: Group describes single test group instance with JSON field descriptions.
      required:
      - count
      - name
      type: object
      properties:
        count:
          type: integer
          format: int64
          x-go-name: Count
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        name:
          type: string
          x-go-name: Name
        participant_count:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ParticipantCount
        test_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: TestID
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      x-go-package: code.tdlbox.com/loadero/sdk/types/group
    GroupParticipantBody:
      title: GroupParticipantBody describes single group participant instance.
      required:
      - browser
      - count
      - name
      type: object
      properties:
        audio_feed:
          type: string
          format: string
          x-go-name: AudioFeed
        browser:
          type: string
          format: string
          x-go-name: Browser
        compute_unit:
          type: string
          description: normalize indentaion
          format: string
          x-go-name: ComputeUnit
        count:
          type: integer
          format: int64
          x-go-name: Count
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        group_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: GroupID
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        location:
          type: string
          format: string
          x-go-name: Location
        media_type:
          type: string
          format: string
          x-go-name: MediaType
        name:
          type: string
          x-go-name: Name
        network:
          type: string
          format: string
          x-go-name: Network
        profile_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ProfileID
        record_audio:
          type: boolean
          x-go-name: RecordAudio
        test_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: TestID
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
        video_feed:
          type: string
          format: string
          x-go-name: VideoFeed
      x-go-package: code.tdlbox.com/loadero/sdk/types/participant
    InvitedMember:
      required:
      - email
      - role
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        email:
          type: string
          x-go-name: AccountID
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        project_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ProjectID
        role:
          type: string
          format: string
          x-go-name: Role
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      description: |-
        InvitedMember describes single project invited member instance with JSON
        field descriptions.
      x-go-package: code.tdlbox.com/loadero/sdk/types/projectmember
    Location:
      type: object
      properties:
        classificator:
          $ref: '#/components/schemas/ClassificatorType'
        description:
          type: string
          readOnly: true
          x-go-name: Description
        disabled:
          type: boolean
          readOnly: true
          x-go-name: Disabled
        name:
          type: string
          readOnly: true
          x-go-name: Name
        value:
          type: string
          readOnly: true
          x-go-name: Data
      description: |-
        Location is a concrete classificator value that is used to describe different
        location values. Location defines all available AWS regions from which it is
        possible to launch Loadero tests.
      x-go-package: code.tdlbox.com/loadero/sdk/types/classificator
    MachineStats:
      type: object
      properties:
        avg:
          $ref: '#/components/schemas/Statistics'
        max:
          $ref: '#/components/schemas/Statistics'
        min:
          $ref: '#/components/schemas/Statistics'
        perc_25:
          $ref: '#/components/schemas/Statistics'
        perc_50:
          $ref: '#/components/schemas/Statistics'
        perc_75:
          $ref: '#/components/schemas/Statistics'
        perc_95:
          $ref: '#/components/schemas/Statistics'
        perc_99:
          $ref: '#/components/schemas/Statistics'
        relative_std_dev:
          $ref: '#/components/schemas/Statistics'
        std_dev:
          $ref: '#/components/schemas/Statistics'
        total:
          $ref: '#/components/schemas/Statistics'
      description: |-
        MachineStats consists of indicators about resource usage by the test
        execution.
      x-go-package: code.tdlbox.com/loadero/sdk/types/result
    Member:
      title: Member describes single project member instance with JSON field descriptions.
      required:
      - role
      type: object
      properties:
        account_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: AccountID
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        project_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ProjectID
        role:
          type: string
          format: string
          x-go-name: Role
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      x-go-package: code.tdlbox.com/loadero/sdk/types/projectmember
    MemberRole:
      type: object
      properties:
        classificator:
          $ref: '#/components/schemas/ClassificatorType'
        description:
          type: string
          readOnly: true
          x-go-name: Description
        disabled:
          type: boolean
          readOnly: true
          x-go-name: Disabled
        name:
          type: string
          readOnly: true
          x-go-name: Name
        value:
          type: string
          readOnly: true
          x-go-name: Data
      description: |-
        MemberRole is a concrete classificator value that is used to describe
        different member role values. Member roles are different values that are
        assigned to each project member. They follow a predefined hierarchy that
        allows to define permissions to each member in a project.
      x-go-package: code.tdlbox.com/loadero/sdk/types/classificator
    Metric:
      title: Metric describes single metric instance with JSON field descriptions.
      required:
      - metric_path
      type: object
      properties:
        average:
          type: number
          format: double
          x-go-name: Average
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        data_count:
          type: integer
          format: int64
          x-go-name: DataCount
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        maximum:
          type: number
          format: double
          x-go-name: Maximum
        metric_path:
          type: string
          format: string
          x-go-name: MetricPath
        minimum:
          type: number
          format: double
          x-go-name: Minimum
        perc_25th:
          type: number
          format: double
          x-go-name: Perc25th
        perc_50th:
          type: number
          format: double
          x-go-name: Perc50th
        perc_75th:
          type: number
          format: double
          x-go-name: Perc75th
        perc_95th:
          type: number
          format: double
          x-go-name: Perc95th
        perc_99th:
          type: number
          format: double
          x-go-name: Perc99th
        stddev:
          type: number
          format: double
          x-go-name: Stddev
        value:
          type: string
          x-go-name: Value
      x-go-package: code.tdlbox.com/loadero/sdk/types/metric
    MetricList:
      title: MetricList describes map used by Metrics struct.
      type: object
      x-go-package: code.tdlbox.com/loadero/sdk/types/resultresourceusage
    MetricPath:
      type: object
      properties:
        Final:
          type: boolean
        ID:
          type: integer
          format: int64
        Key:
          type: string
          format: string
        ParentID:
          type: integer
          format: int64
      description: |-
        MetricPath defines joint path of different metric keys that lead to specific
        metric. Single metric path can have multiple children, forming a tree.
      x-go-package: code.tdlbox.com/loadero/sdk/types/metricpath
    Metrics:
      title: Metrics describes all metrics for a spesific result or run.
      type: object
      properties:
        machine:
          $ref: '#/components/schemas/MetricList'
        webrtc:
          $ref: '#/components/schemas/MetricList'
      x-go-package: code.tdlbox.com/loadero/sdk/types/resultresourceusage
    Network:
      type: object
      properties:
        classificator:
          $ref: '#/components/schemas/ClassificatorType'
        description:
          type: string
          readOnly: true
          x-go-name: Description
        disabled:
          type: boolean
          readOnly: true
          x-go-name: Disabled
        name:
          type: string
          readOnly: true
          x-go-name: Name
        value:
          type: string
          readOnly: true
          x-go-name: Data
      description: |-
        Network is a concrete classificator value that is used to describe different
        network setting values. Network describes group of network conditions that
        simulate various network conditions for a single user and allow client to
        test app behaviour under changing network.
      x-go-package: code.tdlbox.com/loadero/sdk/types/classificator
    NetworkParams:
      title: NetworkParams describes single inbound/outbound network type data.
      type: object
      properties:
        bytes:
          type: number
          format: double
          readOnly: true
          x-go-name: Bytes
        bytes_per_second:
          type: number
          format: double
          readOnly: true
          x-go-name: BytesPerSecond
        dropped:
          type: integer
          format: int64
          readOnly: true
          x-go-name: Dropped
        dropped_per_second:
          type: number
          format: double
          readOnly: true
          x-go-name: DroppedPerSecond
        errors:
          type: integer
          format: int64
          readOnly: true
          x-go-name: Errors
        errors_per_second:
          type: number
          format: double
          readOnly: true
          x-go-name: ErrorsPerSecond
        packets:
          type: integer
          format: int64
          readOnly: true
          x-go-name: Packets
        packets_per_second:
          type: number
          format: double
          readOnly: true
          x-go-name: PacketsPerSecond
      x-go-package: code.tdlbox.com/loadero/sdk/types/resultresourceusage
    NetworkStatistics:
      type: object
      properties:
        bytes:
          type: number
          format: double
          readOnly: true
          x-go-name: Bytes
        bytes_per_second:
          type: number
          format: double
          readOnly: true
          x-go-name: BytesPerSecond
        dropped:
          type: number
          format: double
          readOnly: true
          x-go-name: Dropped
        dropped_per_second:
          type: number
          format: double
          readOnly: true
          x-go-name: DroppedPerSecond
        errors:
          type: number
          format: double
          readOnly: true
          x-go-name: Errors
        errors_per_second:
          type: number
          format: double
          readOnly: true
          x-go-name: ErrorsPerSecond
        packets:
          type: number
          format: double
          readOnly: true
          x-go-name: Packets
        packets_per_second:
          type: number
          format: double
          readOnly: true
          x-go-name: PacketsPerSecond
      description: |-
        NetworkStatistics describes inbound/outbound network type statistics
        data.
      x-go-package: code.tdlbox.com/loadero/sdk/types/resultresourceusage
    NewPassword:
      required:
      - confirm_password
      - password
      type: object
      properties:
        confirm_password:
          type: string
          x-go-name: ConfirmPassword
        password:
          type: string
          x-go-name: Password
      description: |-
        NewPassword holds fields for new account password creation. Model is used for
        parsing incoming request for new account creation with account password.
      x-go-package: code.tdlbox.com/loadero/sdk/types/account
    Operator:
      type: object
      properties:
        classificator:
          $ref: '#/components/schemas/ClassificatorType'
        description:
          type: string
          readOnly: true
          x-go-name: Description
        disabled:
          type: boolean
          readOnly: true
          x-go-name: Disabled
        name:
          type: string
          readOnly: true
          x-go-name: Name
        value:
          type: string
          readOnly: true
          x-go-name: Data
      description: |-
        Operator is a concrete classificator value that is used to describe different
        math operator values. Operator is mainly used in assertions to compare
        values. This classificator refers to mathematical operators.
      x-go-package: code.tdlbox.com/loadero/sdk/types/classificator
    Overview:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        end:
          type: string
          format: date-time
          readOnly: true
          x-go-name: End
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        participant_details:
          $ref: '#/components/schemas/RunParticipant'
        profile_params:
          $ref: '#/components/schemas/Params'
        run_participant_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: RunParticipantID
        selenium_result:
          type: string
          format: string
          readOnly: true
          x-go-name: SeleniumResult
        start:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Start
        status:
          type: string
          format: string
          readOnly: true
          x-go-name: Status
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      description: |-
        Overview describes single result overview instance with JSON field
        descriptions.
      x-go-package: code.tdlbox.com/loadero/sdk/types/result
    Pagination:
      title: Pagination describes information about limited response to resource requests.
      type: object
      properties:
        limit:
          type: integer
          format: int64
          x-go-name: Limit
        offset:
          type: integer
          format: int64
          x-go-name: Offset
        page:
          type: integer
          format: int64
          x-go-name: Page
        total_pages:
          type: integer
          format: int64
          x-go-name: TotalPages
      x-go-package: code.tdlbox.com/loadero/sdk/types
    Params:
      title: Params contains various necessary classificator fields.
      required:
      - browser
      type: object
      properties:
        audio_feed:
          type: string
          format: string
          x-go-name: AudioFeed
        browser:
          type: string
          format: string
          x-go-name: Browser
        location:
          type: string
          format: string
          x-go-name: Location
        media_type:
          type: string
          format: string
          x-go-name: MediaType
        network:
          type: string
          format: string
          x-go-name: Network
        video_feed:
          type: string
          format: string
          x-go-name: VideoFeed
      x-go-package: code.tdlbox.com/loadero/sdk/types/profile
    ParticipantBody:
      title: ParticipantBody describes single participant instance.
      required:
      - browser
      - count
      - name
      type: object
      properties:
        audio_feed:
          type: string
          format: string
          x-go-name: AudioFeed
        browser:
          type: string
          format: string
          x-go-name: Browser
        compute_unit:
          type: string
          description: normalize indentaion
          format: string
          x-go-name: ComputeUnit
        count:
          type: integer
          format: int64
          x-go-name: Count
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        group_id:
          type: integer
          format: int64
          x-go-name: GroupID
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        location:
          type: string
          format: string
          x-go-name: Location
        media_type:
          type: string
          format: string
          x-go-name: MediaType
        name:
          type: string
          x-go-name: Name
        network:
          type: string
          format: string
          x-go-name: Network
        profile_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ProfileID
        record_audio:
          type: boolean
          x-go-name: RecordAudio
        test_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: TestID
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
        video_feed:
          type: string
          format: string
          x-go-name: VideoFeed
      x-go-package: code.tdlbox.com/loadero/sdk/types/participant
    Project:
      title: Project describes single project instance with JSON field descriptions.
      required:
      - language
      - name
      type: object
      properties:
        account_role:
          type: string
          format: string
          readOnly: true
          x-go-name: AccountRole
        aws_info_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: AWSInfoID
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        language:
          type: string
          format: string
          x-go-name: Language
        member_count:
          type: integer
          format: int64
          readOnly: true
          x-go-name: MemberCount
        name:
          type: string
          x-go-name: Name
        subscription_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: SubscriptionID
        trial_expired:
          type: boolean
          readOnly: true
          x-go-name: TrialExpired
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      x-go-package: code.tdlbox.com/loadero/sdk/types/project
    Result:
      title: Result describes single result instance with JSON field descriptions.
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        end:
          type: string
          format: date-time
          readOnly: true
          x-go-name: End
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        run_participant_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: RunParticipantID
        selenium_result:
          type: string
          format: string
          readOnly: true
          x-go-name: SeleniumResult
        start:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Start
        status:
          type: string
          format: string
          readOnly: true
          x-go-name: Status
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      x-go-package: code.tdlbox.com/loadero/sdk/types/result
    ResultAssert:
      required:
      - expected
      - operator
      - path
      type: object
      properties:
        actual:
          type: string
          readOnly: true
          x-go-name: Actual
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        expected:
          type: string
          x-go-name: Expected
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        message:
          type: string
          readOnly: true
          x-go-name: Message
        operator:
          type: string
          format: string
          x-go-name: Operator
        path:
          type: string
          format: string
          x-go-name: Path
        result_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ResultID
        run_assert_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: RunAssertID
        status:
          type: string
          format: string
          readOnly: true
          x-go-name: Status
      description: |-
        ResultAssert describes single result assert instance with JSON field
        descriptions.
      x-go-package: code.tdlbox.com/loadero/sdk/types/resultassert
    ResultLog:
      title: ResultLog describes single result log instance with JSON field descriptions.
      type: object
      properties:
        browser:
          type: string
          readOnly: true
          x-go-name: Browser
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        result_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ResultID
        rru:
          type: string
          readOnly: true
          x-go-name: RRU
        selenium:
          type: string
          readOnly: true
          x-go-name: Selenium
        webrtc:
          type: string
          readOnly: true
          x-go-name: WebRTC
      x-go-package: code.tdlbox.com/loadero/sdk/types/resultlogs
    ResultResourceUsage:
      type: object
      properties:
        cpu_available:
          type: number
          format: double
          readOnly: true
          x-go-name: CPUAvailable
        cpu_usage:
          type: number
          format: double
          readOnly: true
          x-go-name: CPUUsage
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        memory_available:
          type: number
          format: double
          readOnly: true
          x-go-name: MemoryAvailable
        memory_usage:
          type: number
          format: double
          readOnly: true
          x-go-name: MemoryUsage
        network_rx:
          $ref: '#/components/schemas/NetworkParams'
        network_tx:
          $ref: '#/components/schemas/NetworkParams'
        read_time:
          type: string
          format: date-time
          readOnly: true
          x-go-name: ReadTime
        result_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ResultID
      description: |-
        ResultResourceUsage describes single result resource usage instance with JSON
        field descriptions.
      x-go-package: code.tdlbox.com/loadero/sdk/types/resultresourceusage
    ResultStatus:
      type: object
      properties:
        classificator:
          $ref: '#/components/schemas/ClassificatorType'
        description:
          type: string
          readOnly: true
          x-go-name: Description
        disabled:
          type: boolean
          readOnly: true
          x-go-name: Disabled
        name:
          type: string
          readOnly: true
          x-go-name: Name
        value:
          type: string
          readOnly: true
          x-go-name: Data
      description: |-
        ResultStatus is a concrete classificator value that is used to describe
        different result status values. Result status indicates the final outcome of
        a single result instance.
      x-go-package: code.tdlbox.com/loadero/sdk/types/classificator
    Run:
      title: Run describes single run instance with JSON field descriptions.
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        execution_finished:
          type: string
          format: date-time
          readOnly: true
          x-go-name: ExecutionFinished
        execution_started:
          type: string
          format: date-time
          readOnly: true
          x-go-name: ExecutionStarted
        group_count:
          type: integer
          format: int64
          readOnly: true
          x-go-name: GroupCount
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        increment_strategy:
          type: string
          format: string
          readOnly: true
          x-go-name: IncrementStrategy
        launching_account_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: LaunchingAccountID
        participant_timeout:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ParticipantTimeout
        processing_finished:
          type: string
          format: date-time
          readOnly: true
          x-go-name: ProcessingFinished
        processing_started:
          type: string
          format: date-time
          readOnly: true
          x-go-name: ProcessingStarted
        script_file_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ScriptFileID
        start_interval:
          type: integer
          format: int64
          readOnly: true
          x-go-name: StartInterval
        status:
          type: string
          format: string
          readOnly: true
          x-go-name: Status
        success_rate:
          type: number
          format: double
          readOnly: true
          x-go-name: SuccessRate
        test_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: TestID
        test_mode:
          type: string
          format: string
          readOnly: true
          x-go-name: TestMode
        test_name:
          type: string
          readOnly: true
          x-go-name: TestName
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      x-go-package: code.tdlbox.com/loadero/sdk/types/run
    RunAssertPrecondition:
      required:
      - expected
      - operator
      - property
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        expected:
          type: string
          x-go-name: Expected
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        operator:
          type: string
          format: string
          x-go-name: Operator
        property:
          type: string
          format: string
          x-go-name: Property
        run_assert_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: RunAssertID
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      description: |-
        RunAssertPrecondition describes single run assert precondition instance with
        JSON field descriptions.
      x-go-package: code.tdlbox.com/loadero/sdk/types/runassertprecondition
    RunBody:
      title: Body describes single run instance with JSON field descriptions.
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        execution_finished:
          type: string
          format: date-time
          readOnly: true
          x-go-name: ExecutionFinished
        execution_started:
          type: string
          format: date-time
          readOnly: true
          x-go-name: ExecutionStarted
        group_count:
          type: integer
          format: int64
          readOnly: true
          x-go-name: GroupCount
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        increment_strategy:
          type: string
          format: string
          readOnly: true
          x-go-name: IncrementStrategy
        launching_account_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: LaunchingAccountID
        participant_count:
          type: integer
          format: int64
          x-go-name: ParticipantCount
        participant_timeout:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ParticipantTimeout
        processing_finished:
          type: string
          format: date-time
          readOnly: true
          x-go-name: ProcessingFinished
        processing_started:
          type: string
          format: date-time
          readOnly: true
          x-go-name: ProcessingStarted
        script_file_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ScriptFileID
        start_interval:
          type: integer
          format: int64
          readOnly: true
          x-go-name: StartInterval
        status:
          type: string
          format: string
          readOnly: true
          x-go-name: Status
        success_rate:
          type: number
          format: double
          readOnly: true
          x-go-name: SuccessRate
        test_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: TestID
        test_mode:
          type: string
          format: string
          readOnly: true
          x-go-name: TestMode
        test_name:
          type: string
          readOnly: true
          x-go-name: TestName
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      x-go-name: Body
      x-go-package: code.tdlbox.com/loadero/sdk/types/run
    RunParticipant:
      type: object
      properties:
        compute_unit:
          type: string
          format: string
          readOnly: true
          x-go-name: ComputeUnit
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        group_name:
          type: string
          readOnly: true
          x-go-name: GroupName
        group_num:
          type: integer
          format: int64
          readOnly: true
          x-go-name: GroupNum
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        participant_name:
          type: string
          readOnly: true
          x-go-name: ParticipantName
        participant_num:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ParticipantNum
        profile_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ProfileID
        record_audio:
          type: boolean
          x-go-name: RecordAudio
        run_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: RunID
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      description: |-
        RunParticipant describes single run participant instance with JSON field
        descriptions.
        swagger: model
      x-go-package: code.tdlbox.com/loadero/sdk/types/runparticipant
    RunParticipantBody:
      required:
      - browser
      type: object
      properties:
        audio_feed:
          type: string
          format: string
          x-go-name: AudioFeed
        browser:
          type: string
          format: string
          x-go-name: Browser
        compute_unit:
          type: string
          format: string
          readOnly: true
          x-go-name: ComputeUnit
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        group_name:
          type: string
          readOnly: true
          x-go-name: GroupName
        group_num:
          type: integer
          format: int64
          readOnly: true
          x-go-name: GroupNum
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        location:
          type: string
          format: string
          x-go-name: Location
        media_type:
          type: string
          format: string
          x-go-name: MediaType
        network:
          type: string
          format: string
          x-go-name: Network
        participant_name:
          type: string
          readOnly: true
          x-go-name: ParticipantName
        participant_num:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ParticipantNum
        profile_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ProfileID
        record_audio:
          type: boolean
          x-go-name: RecordAudio
        run_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: RunID
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
        video_feed:
          type: string
          format: string
          x-go-name: VideoFeed
      description: |-
        Body describes single run participant instance with JSON field
        descriptions.
      x-go-name: Body
      x-go-package: code.tdlbox.com/loadero/sdk/types/runparticipant
    Statistics:
      type: object
      properties:
        cpu_available:
          type: number
          format: double
          readOnly: true
          x-go-name: CPUAvailable
        cpu_usage:
          type: number
          format: double
          readOnly: true
          x-go-name: CPUUsage
        memory_available:
          type: number
          format: double
          readOnly: true
          x-go-name: MemoryAvailable
        memory_usage:
          type: number
          format: double
          readOnly: true
          x-go-name: MemoryUsage
        network_rx:
          $ref: '#/components/schemas/NetworkStatistics'
        network_tx:
          $ref: '#/components/schemas/NetworkStatistics'
      description: |-
        Statistics describes result resource usage statistics with JSON field
        descriptions.
      x-go-package: code.tdlbox.com/loadero/sdk/types/resultresourceusage
    Subscription:
      required:
      - billing_email
      - payment_plan
      type: object
      properties:
        activation_date:
          type: string
          format: date-time
          readOnly: true
          x-go-name: ActivationDate
        billing_email:
          type: string
          x-go-name: BillingEmail
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        early_subscriber:
          type: boolean
          readOnly: true
          x-go-name: EarlySubscriber
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        payment_plan:
          type: string
          format: string
          x-go-name: PaymentPlan
        payment_status:
          type: string
          format: string
          readOnly: true
          x-go-name: PaymentStatus
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      description: |-
        Subscription describes single subscription instance with JSON field
        descriptions.
      x-go-package: code.tdlbox.com/loadero/sdk/types/subscription
    Test:
      title: Test describes single test instance with JSON field descriptions.
      required:
      - increment_strategy
      - mode
      - name
      - participant_timeout
      - start_interval
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        deleted:
          type: boolean
          readOnly: true
          x-go-name: Deleted
        group_count:
          type: integer
          format: int64
          readOnly: true
          x-go-name: GroupCount
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        increment_strategy:
          type: string
          format: string
          x-go-name: IncrementStrategy
        mode:
          type: string
          format: string
          x-go-name: Mode
        name:
          type: string
          x-go-name: Name
        participant_count:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ParticipantCount
        participant_timeout:
          type: integer
          format: int64
          x-go-name: ParticipantTimeout
        project_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ProjectID
        script_file_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ScriptFileID
        start_interval:
          type: integer
          format: int64
          x-go-name: StartInterval
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      x-go-package: code.tdlbox.com/loadero/sdk/types/test
    TestMode:
      type: object
      properties:
        classificator:
          $ref: '#/components/schemas/ClassificatorType'
        description:
          type: string
          readOnly: true
          x-go-name: Description
        disabled:
          type: boolean
          readOnly: true
          x-go-name: Disabled
        name:
          type: string
          readOnly: true
          x-go-name: Name
        value:
          type: string
          readOnly: true
          x-go-name: Data
      description: |-
        TestMode is a concrete classificator value that is used to describe different
        test mode values. Test mode determines different logical parts of the test
        such as log collection logic and different service limits.
      x-go-package: code.tdlbox.com/loadero/sdk/types/classificator
    TokenInfo:
      title: TokenInfo contains information about API token.
      type: object
      properties:
        access_token:
          type: string
          x-go-name: AccessToken
        active:
          type: boolean
          x-go-name: Active
        client_id:
          type: string
          x-go-name: ClientID
        created_at:
          type: integer
          format: int64
          x-go-name: CreatedAt
        exp:
          type: integer
          format: int64
          x-go-name: Exp
        expires_in:
          type: integer
          format: int64
          x-go-name: ExpiresIn
        scopes:
          type: array
          items:
            type: string
          x-go-name: Scopes
        token_type:
          type: string
          x-go-name: TokenType
        username:
          type: string
          x-go-name: Username
      x-go-package: code.tdlbox.com/loadero/sdk/auth
    UpdateUserBody:
      type: object
      properties:
        confirm_new_password:
          type: string
          x-go-name: ConfirmNewPassword
        new_password:
          type: string
          x-go-name: NewPassword
        password:
          type: string
          x-go-name: Password
        reset_password_token:
          type: string
          x-go-name: ResetPasswordToken
        username:
          type: string
          x-go-name: Username
      description: |-
        UpdateUserBody describes the information needed for update account auth
        request.
      x-go-package: code.tdlbox.com/loadero/sdk/auth
    ValidationResponse:
      title: ValidationResponse will be sent in case a validation fails.
      type: object
      properties:
        code:
          type: integer
          description: Status code of error
          format: int64
          x-go-name: Code
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: List of validation errors
          x-go-name: Errors
      x-go-package: code.tdlbox.com/loadero/sdk/sdkutil
    VideoFeed:
      type: object
      properties:
        classificator:
          $ref: '#/components/schemas/ClassificatorType'
        description:
          type: string
          readOnly: true
          x-go-name: Description
        disabled:
          type: boolean
          readOnly: true
          x-go-name: Disabled
        name:
          type: string
          readOnly: true
          x-go-name: Name
        value:
          type: string
          readOnly: true
          x-go-name: Data
      description: |-
        VideoFeed is a concrete classificator value that is used to describe
        different video feed values. Video feed indicates the currently supported
        video values.
      x-go-package: code.tdlbox.com/loadero/sdk/types/classificator
    addressInfo:
      type: object
      properties:
        city:
          type: string
          x-go-name: City
        country:
          type: string
          x-go-name: Country
        line1:
          type: string
          x-go-name: Line1
        line2:
          type: string
          x-go-name: Line2
        postal_code:
          type: string
          x-go-name: PostalCode
        state:
          type: string
          x-go-name: State
      x-go-package: code.tdlbox.com/loadero/controller/handlers/v2/subscriptionshttp
    assertOverview:
      required:
      - expected
      - operator
      - path
      type: object
      properties:
        expected:
          type: string
          x-go-name: Expected
        fail:
          type: integer
          format: int64
          x-go-name: Fail
        operator:
          type: string
          format: string
          x-go-name: Operator
        pass:
          type: integer
          format: int64
          x-go-name: Pass
        path:
          type: string
          format: string
          x-go-name: Path
        preconditions:
          type: array
          items:
            $ref: '#/components/schemas/RunAssertPrecondition'
          x-go-name: Preconditions
        run_assert_id:
          type: integer
          format: int64
          x-go-name: RunAssertID
        skip:
          type: integer
          format: int64
          x-go-name: Skip
        status:
          type: string
          format: string
          x-go-name: Status
      x-go-package: code.tdlbox.com/loadero/controller/handlers/v2
    awsInfoReponse:
      required:
      - account_id
      - client_id
      type: object
      properties:
        account_id:
          type: string
          x-go-name: AccountID
        artifact_bucket:
          type: string
          readOnly: true
          x-go-name: ArtifactBucket
        client_id:
          type: string
          x-go-name: ClientID
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        linked_projects:
          type: array
          items:
            $ref: '#/components/schemas/simpleProject'
          x-go-name: LinkedProjects
        log_bucket:
          type: string
          readOnly: true
          x-go-name: LogBucket
        status:
          type: string
          format: string
          readOnly: true
          x-go-name: Status
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      description: |-
        AWSInfoReponse is response format that contains linked projects info and
        AWSInfo corresponding to query.
      x-go-name: AWSInfoReponse
      x-go-package: code.tdlbox.com/loadero/controller/handlers/v2
    billingInfo:
      type: object
      properties:
        billing_address:
          $ref: '#/components/schemas/addressInfo'
        buyer_kind:
          type: string
          x-go-name: BuyerKind
        default_payment_method:
          type: string
          description: normalize indentation
          x-go-name: DefaultPaymentMethod
        invoices:
          type: array
          description: normalize indentation
          items:
            $ref: '#/components/schemas/billingInvoice'
          x-go-name: Invoices
        name:
          type: string
          x-go-name: Name
        next_invoice:
          $ref: '#/components/schemas/billingInvoice'
        payment_methods:
          type: array
          items:
            $ref: '#/components/schemas/paymentMethod'
          x-go-name: PaymentMethods
        subscription_id:
          type: integer
          format: int64
          x-go-name: SubscriptionID
        vat_info:
          $ref: '#/components/schemas/vatInfo'
      x-go-package: code.tdlbox.com/loadero/controller/handlers/v2/subscriptionshttp
    billingInvoice:
      type: object
      properties:
        amount:
          type: number
          format: double
          x-go-name: Amount
        compute_units:
          type: number
          format: double
          x-go-name: ComputeUnits
        currency:
          type: string
          x-go-name: Currency
        description:
          type: string
          x-go-name: Description
        hosted_invoice_url:
          type: string
          x-go-name: HostedInvoiceURL
        paid_at:
          type: integer
          format: int64
          x-go-name: PaidAt
        pdf:
          type: string
          x-go-name: PDF
        period_end:
          type: integer
          format: int64
          x-go-name: PeriodEnd
        period_start:
          type: integer
          format: int64
          x-go-name: PeriodStart
        status:
          type: string
          x-go-name: Status
      x-go-package: code.tdlbox.com/loadero/controller/handlers/v2/subscriptionshttp
    fullAssert:
      required:
      - expected
      - operator
      - path
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        expected:
          type: string
          x-go-name: Expected
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        operator:
          type: string
          format: string
          x-go-name: Operator
        path:
          type: string
          format: string
          x-go-name: Path
        preconditions:
          type: array
          items:
            $ref: '#/components/schemas/AssertPrecondition'
          x-go-name: Preconditions
        test_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: TestID
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      x-go-package: code.tdlbox.com/loadero/controller/handlers/v2
    fullProject:
      required:
      - language
      - name
      type: object
      properties:
        account_role:
          type: string
          format: string
          readOnly: true
          x-go-name: AccountRole
        aws_info_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: AWSInfoID
        compute_unit_usage:
          $ref: '#/components/schemas/ComputeUnitUsage'
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        language:
          type: string
          format: string
          x-go-name: Language
        member_count:
          type: integer
          format: int64
          readOnly: true
          x-go-name: MemberCount
        name:
          type: string
          x-go-name: Name
        subscription:
          $ref: '#/components/schemas/Subscription'
        subscription_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: SubscriptionID
        trial_expired:
          type: boolean
          readOnly: true
          x-go-name: TrialExpired
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      description: |-
        fullProject describes single project instance with JSON field descriptions
        and additional subscription info.
      x-go-package: code.tdlbox.com/loadero/controller/handlers/v2
    memberInfo:
      required:
      - role
      type: object
      properties:
        account:
          $ref: '#/components/schemas/Account'
        account_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: AccountID
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        project_id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ProjectID
        role:
          type: string
          format: string
          x-go-name: Role
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      x-go-package: code.tdlbox.com/loadero/controller/handlers/v2
    paymentMethod:
      type: object
      properties:
        brand:
          type: string
          x-go-name: Brand
        cardholder_name:
          type: string
          x-go-name: CardholderName
        exp_month:
          type: integer
          format: int64
          x-go-name: ExpMonth
        exp_year:
          type: integer
          format: int64
          x-go-name: ExpYear
        id:
          type: string
          x-go-name: ID
        is_default:
          type: boolean
          x-go-name: IsDefault
        last_4:
          type: string
          x-go-name: Last4
      x-go-package: code.tdlbox.com/loadero/controller/handlers/v2/subscriptionshttp
    simpleProject:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Created
        id:
          type: integer
          format: int64
          readOnly: true
          x-go-name: ID
        name:
          type: string
          x-go-name: Name
        updated:
          type: string
          format: date-time
          readOnly: true
          x-go-name: Updated
      x-go-package: code.tdlbox.com/loadero/controller/handlers/v2
    vatInfo:
      type: object
      properties:
        type:
          type: string
          x-go-name: Type
        value:
          type: string
          x-go-name: Value
      x-go-package: code.tdlbox.com/loadero/controller/handlers/v2/subscriptionshttp
  responses:
    accountsResponse:
      description: |-
        AccountsResponse is response format that contains pagination info and
        results corresponding to query
      content:
        application/json:
          schema:
            type: object
            properties:
              filter:
                $ref: '#/components/schemas/Filterer'
              pagination:
                $ref: '#/components/schemas/Pagination'
              results:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
                x-go-name: Results
    assertsResponse:
      description: |-
        AssertsResponse is response format that contains pagination info and
        results corresponding to query
      content:
        application/json:
          schema:
            type: object
            properties:
              filter:
                $ref: '#/components/schemas/Filterer'
              pagination:
                $ref: '#/components/schemas/Pagination'
              results:
                type: array
                items:
                  $ref: '#/components/schemas/fullAssert'
                x-go-name: Results
    emptyResponse:
      description: EmptyResponse will be sent in case there is no data to return to
        user.
      content: {}
    errorResponse:
      description: errorResponse will be sent in case an error occurs during request
        processing.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    fileResponse:
      description: FileResponse is response format that contains a avatar image file
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/File'
    forbiddenResponse:
      description: |-
        ForbiddenResponse will be sent in case user lacks permission to access
        requested resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    groupsResponse:
      description: |-
        GroupsResponse is response format that contains pagination info and
        results corresponding to query
      content:
        application/json:
          schema:
            type: object
            properties:
              filter:
                $ref: '#/components/schemas/Filterer'
              pagination:
                $ref: '#/components/schemas/Pagination'
              results:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
                x-go-name: Results
    invitedMembersResponse:
      description: |-
        InvitedMembersResponse is response format that contains pagination info
        and results corresponding to query
      content:
        application/json:
          schema:
            type: object
            properties:
              filter:
                $ref: '#/components/schemas/Filterer'
              pagination:
                $ref: '#/components/schemas/Pagination'
              results:
                type: array
                items:
                  $ref: '#/components/schemas/InvitedMember'
                x-go-name: Results
    membersResponse:
      description: |-
        MembersResponse is response format that contains pagination info and
        results corresponding to query
      content:
        application/json:
          schema:
            type: object
            properties:
              filter:
                $ref: '#/components/schemas/Filterer'
              pagination:
                $ref: '#/components/schemas/Pagination'
              results:
                type: array
                items:
                  $ref: '#/components/schemas/memberInfo'
                x-go-name: Results
    metricPathsResponse:
      description: MetricPathsResponse is list of available metric paths
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
    participantsResponse:
      description: |-
        ParticipantsResponse is response format that contains pagination info and
        results corresponding to query
      content:
        application/json:
          schema:
            type: object
            properties:
              filter:
                $ref: '#/components/schemas/Filterer'
              pagination:
                $ref: '#/components/schemas/Pagination'
              results:
                type: array
                items:
                  $ref: '#/components/schemas/ParticipantBody'
                x-go-name: Results
    preconditionsResponse:
      description: |-
        PreconditionResponse is response format that contains pagination info
        and results corresponding to query
      content:
        application/json:
          schema:
            type: object
            properties:
              filter:
                $ref: '#/components/schemas/Filterer'
              pagination:
                $ref: '#/components/schemas/Pagination'
              results:
                type: array
                items:
                  $ref: '#/components/schemas/AssertPrecondition'
                x-go-name: Results
    projectsResponse:
      description: |-
        ProjectsResponse is response format that contains pagination info and
        results corresponding to query
      content:
        application/json:
          schema:
            type: object
            properties:
              filter:
                $ref: '#/components/schemas/Filterer'
              pagination:
                $ref: '#/components/schemas/Pagination'
              results:
                type: array
                items:
                  $ref: '#/components/schemas/fullProject'
                x-go-name: Results
    runParticipantResponse:
      description: |-
        RunParticipantResponse is response format that contains pagination info
        and results corresponding to query
      content:
        application/json:
          schema:
            type: object
            properties:
              filter:
                $ref: '#/components/schemas/Filterer'
              pagination:
                $ref: '#/components/schemas/Pagination'
              results:
                type: array
                items:
                  $ref: '#/components/schemas/RunParticipantBody'
                x-go-name: Results
    runResultResponse:
      description: |-
        RunResultResponse is response format that contains pagination info and
        results corresponding to query
      content:
        application/json:
          schema:
            type: object
            properties:
              filter:
                $ref: '#/components/schemas/Filterer'
              pagination:
                $ref: '#/components/schemas/Pagination'
              results:
                type: array
                items:
                  $ref: '#/components/schemas/Overview'
                x-go-name: Result
    runsResponse:
      description: |-
        RunsResponse is response format that contains pagination info and results
        corresponding to query
      content:
        application/json:
          schema:
            type: object
            properties:
              filter:
                $ref: '#/components/schemas/Filterer'
              pagination:
                $ref: '#/components/schemas/Pagination'
              results:
                type: array
                items:
                  $ref: '#/components/schemas/Run'
                x-go-name: Results
    staticTypesResponse:
      description: |-
        StaticTypesResponse is response format that contains all static type
        information
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
    staticsResponse:
      description: |-
        StaticsResponse is response format that contains all static resource
        information
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: array
              items:
                $ref: '#/components/schemas/BaseClassificator'
    statisticsResponse:
      description: |-
        StatisticsResponse is response format that contains assert overview and
        machine statistics
      content:
        application/json:
          schema:
            type: object
            properties:
              asserts:
                type: array
                items:
                  $ref: '#/components/schemas/assertOverview'
                x-go-name: Asserts
              machine_stats:
                $ref: '#/components/schemas/MachineStats'
    testsResponse:
      description: |-
        TestsResponse is response format that contains pagination info and
        results corresponding to query
      content:
        application/json:
          schema:
            type: object
            properties:
              filter:
                $ref: '#/components/schemas/Filterer'
              pagination:
                $ref: '#/components/schemas/Pagination'
              results:
                type: array
                items:
                  $ref: '#/components/schemas/Test'
                x-go-name: Results
    tokensResponse:
      description: |-
        TokensResponse is response format that contains all token resource
        information.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TokenInfo'
    unauthorizedResponse:
      description: |-
        UnauthorizedResponse will be sent in case an authorization error occurs
        and user is not authorized to access requested resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    validationResponse:
      description: validationResponse will be sent in case a validation fails.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationResponse'
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: LoaderoAuth
      in: header
