/*
 * Loadero Controller
 * This application serves main Loadero's endpoints that can be used to manipulate test data and other services
 *
 * OpenAPI spec version: v0.32.1
 * Contact: support@loadero.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LoaderoController);
  }
}(this, function(expect, LoaderoController) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('NetworkParams', function() {
      beforeEach(function() {
        instance = new LoaderoController.NetworkParams();
      });

      it('should create an instance of NetworkParams', function() {
        // TODO: update the code to test NetworkParams
        expect(instance).to.be.a(LoaderoController.NetworkParams);
      });

      it('should have the property bytes (base name: "bytes")', function() {
        // TODO: update the code to test the property bytes
        expect(instance).to.have.property('bytes');
        // expect(instance.bytes).to.be(expectedValueLiteral);
      });

      it('should have the property bytesPerSecond (base name: "bytes_per_second")', function() {
        // TODO: update the code to test the property bytesPerSecond
        expect(instance).to.have.property('bytesPerSecond');
        // expect(instance.bytesPerSecond).to.be(expectedValueLiteral);
      });

      it('should have the property dropped (base name: "dropped")', function() {
        // TODO: update the code to test the property dropped
        expect(instance).to.have.property('dropped');
        // expect(instance.dropped).to.be(expectedValueLiteral);
      });

      it('should have the property droppedPerSecond (base name: "dropped_per_second")', function() {
        // TODO: update the code to test the property droppedPerSecond
        expect(instance).to.have.property('droppedPerSecond');
        // expect(instance.droppedPerSecond).to.be(expectedValueLiteral);
      });

      it('should have the property errors (base name: "errors")', function() {
        // TODO: update the code to test the property errors
        expect(instance).to.have.property('errors');
        // expect(instance.errors).to.be(expectedValueLiteral);
      });

      it('should have the property errorsPerSecond (base name: "errors_per_second")', function() {
        // TODO: update the code to test the property errorsPerSecond
        expect(instance).to.have.property('errorsPerSecond');
        // expect(instance.errorsPerSecond).to.be(expectedValueLiteral);
      });

      it('should have the property packets (base name: "packets")', function() {
        // TODO: update the code to test the property packets
        expect(instance).to.have.property('packets');
        // expect(instance.packets).to.be(expectedValueLiteral);
      });

      it('should have the property packetsPerSecond (base name: "packets_per_second")', function() {
        // TODO: update the code to test the property packetsPerSecond
        expect(instance).to.have.property('packetsPerSecond');
        // expect(instance.packetsPerSecond).to.be(expectedValueLiteral);
      });

    });
  });

}));
