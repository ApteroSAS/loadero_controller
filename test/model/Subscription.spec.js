/*
 * Loadero Controller
 * This application serves main Loadero's endpoints that can be used to manipulate test data and other services
 *
 * OpenAPI spec version: v0.32.1
 * Contact: support@loadero.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LoaderoController);
  }
}(this, function(expect, LoaderoController) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Subscription', function() {
      beforeEach(function() {
        instance = new LoaderoController.Subscription();
      });

      it('should create an instance of Subscription', function() {
        // TODO: update the code to test Subscription
        expect(instance).to.be.a(LoaderoController.Subscription);
      });

      it('should have the property activationDate (base name: "activation_date")', function() {
        // TODO: update the code to test the property activationDate
        expect(instance).to.have.property('activationDate');
        // expect(instance.activationDate).to.be(expectedValueLiteral);
      });

      it('should have the property billingEmail (base name: "billing_email")', function() {
        // TODO: update the code to test the property billingEmail
        expect(instance).to.have.property('billingEmail');
        // expect(instance.billingEmail).to.be(expectedValueLiteral);
      });

      it('should have the property created (base name: "created")', function() {
        // TODO: update the code to test the property created
        expect(instance).to.have.property('created');
        // expect(instance.created).to.be(expectedValueLiteral);
      });

      it('should have the property earlySubscriber (base name: "early_subscriber")', function() {
        // TODO: update the code to test the property earlySubscriber
        expect(instance).to.have.property('earlySubscriber');
        // expect(instance.earlySubscriber).to.be(expectedValueLiteral);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property paymentPlan (base name: "payment_plan")', function() {
        // TODO: update the code to test the property paymentPlan
        expect(instance).to.have.property('paymentPlan');
        // expect(instance.paymentPlan).to.be(expectedValueLiteral);
      });

      it('should have the property paymentStatus (base name: "payment_status")', function() {
        // TODO: update the code to test the property paymentStatus
        expect(instance).to.have.property('paymentStatus');
        // expect(instance.paymentStatus).to.be(expectedValueLiteral);
      });

      it('should have the property updated (base name: "updated")', function() {
        // TODO: update the code to test the property updated
        expect(instance).to.have.property('updated');
        // expect(instance.updated).to.be(expectedValueLiteral);
      });

    });
  });

}));
