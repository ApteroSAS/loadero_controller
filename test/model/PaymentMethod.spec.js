/*
 * Loadero Controller
 * This application serves main Loadero's endpoints that can be used to manipulate test data and other services
 *
 * OpenAPI spec version: v0.32.1
 * Contact: support@loadero.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.21
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LoaderoController);
  }
}(this, function(expect, LoaderoController) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('PaymentMethod', function() {
      beforeEach(function() {
        instance = new LoaderoController.PaymentMethod();
      });

      it('should create an instance of PaymentMethod', function() {
        // TODO: update the code to test PaymentMethod
        expect(instance).to.be.a(LoaderoController.PaymentMethod);
      });

      it('should have the property brand (base name: "brand")', function() {
        // TODO: update the code to test the property brand
        expect(instance).to.have.property('brand');
        // expect(instance.brand).to.be(expectedValueLiteral);
      });

      it('should have the property cardholderName (base name: "cardholder_name")', function() {
        // TODO: update the code to test the property cardholderName
        expect(instance).to.have.property('cardholderName');
        // expect(instance.cardholderName).to.be(expectedValueLiteral);
      });

      it('should have the property expMonth (base name: "exp_month")', function() {
        // TODO: update the code to test the property expMonth
        expect(instance).to.have.property('expMonth');
        // expect(instance.expMonth).to.be(expectedValueLiteral);
      });

      it('should have the property expYear (base name: "exp_year")', function() {
        // TODO: update the code to test the property expYear
        expect(instance).to.have.property('expYear');
        // expect(instance.expYear).to.be(expectedValueLiteral);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property isDefault (base name: "is_default")', function() {
        // TODO: update the code to test the property isDefault
        expect(instance).to.have.property('isDefault');
        // expect(instance.isDefault).to.be(expectedValueLiteral);
      });

      it('should have the property last4 (base name: "last_4")', function() {
        // TODO: update the code to test the property last4
        expect(instance).to.have.property('last4');
        // expect(instance.last4).to.be(expectedValueLiteral);
      });

    });
  });

}));
