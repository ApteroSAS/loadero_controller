/*
 * Loadero Controller
 * This application serves main Loadero's endpoints that can be used to manipulate test data and other services
 *
 * OpenAPI spec version: v0.32.1
 * Contact: support@loadero.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LoaderoController);
  }
}(this, function(expect, LoaderoController) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ResultLog', function() {
      beforeEach(function() {
        instance = new LoaderoController.ResultLog();
      });

      it('should create an instance of ResultLog', function() {
        // TODO: update the code to test ResultLog
        expect(instance).to.be.a(LoaderoController.ResultLog);
      });

      it('should have the property browser (base name: "browser")', function() {
        // TODO: update the code to test the property browser
        expect(instance).to.have.property('browser');
        // expect(instance.browser).to.be(expectedValueLiteral);
      });

      it('should have the property created (base name: "created")', function() {
        // TODO: update the code to test the property created
        expect(instance).to.have.property('created');
        // expect(instance.created).to.be(expectedValueLiteral);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property resultId (base name: "result_id")', function() {
        // TODO: update the code to test the property resultId
        expect(instance).to.have.property('resultId');
        // expect(instance.resultId).to.be(expectedValueLiteral);
      });

      it('should have the property rru (base name: "rru")', function() {
        // TODO: update the code to test the property rru
        expect(instance).to.have.property('rru');
        // expect(instance.rru).to.be(expectedValueLiteral);
      });

      it('should have the property selenium (base name: "selenium")', function() {
        // TODO: update the code to test the property selenium
        expect(instance).to.have.property('selenium');
        // expect(instance.selenium).to.be(expectedValueLiteral);
      });

      it('should have the property webrtc (base name: "webrtc")', function() {
        // TODO: update the code to test the property webrtc
        expect(instance).to.have.property('webrtc');
        // expect(instance.webrtc).to.be(expectedValueLiteral);
      });

    });
  });

}));
