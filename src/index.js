/*
 * Loadero Controller
 * This application serves main Loadero's endpoints that can be used to manipulate test data and other services
 *
 * OpenAPI spec version: v0.32.1
 * Contact: support@loadero.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from './ApiClient';
import {AWSInfo} from './model/AWSInfo';
import {Account} from './model/Account';
import {AddressInfo} from './model/AddressInfo';
import {ArtifactInfo} from './model/ArtifactInfo';
import {ArtifactsInfo} from './model/ArtifactsInfo';
import {Assert} from './model/Assert';
import {AssertOverview} from './model/AssertOverview';
import {AssertPrecondition} from './model/AssertPrecondition';
import {AudioFeed} from './model/AudioFeed';
import {AwsInfoReponse} from './model/AwsInfoReponse';
import {Base} from './model/Base';
import {BaseClassificator} from './model/BaseClassificator';
import {BillingInfo} from './model/BillingInfo';
import {BillingInvoice} from './model/BillingInvoice';
import {Browser} from './model/Browser';
import {ClassificatorType} from './model/ClassificatorType';
import {Common} from './model/Common';
import {ComputeUnit} from './model/ComputeUnit';
import {ComputeUnitUsage} from './model/ComputeUnitUsage';
import {ErrorResponse} from './model/ErrorResponse';
import {ExtendedResult} from './model/ExtendedResult';
import {File} from './model/File';
import {Filterer} from './model/Filterer';
import {FullAssert} from './model/FullAssert';
import {FullProject} from './model/FullProject';
import {Generic} from './model/Generic';
import {Group} from './model/Group';
import {GroupIDCopyBody} from './model/GroupIDCopyBody';
import {GroupParticipantBody} from './model/GroupParticipantBody';
import {InlineResponse200} from './model/InlineResponse200';
import {InlineResponse2001} from './model/InlineResponse2001';
import {InlineResponse2002} from './model/InlineResponse2002';
import {InlineResponse2003} from './model/InlineResponse2003';
import {InlineResponse2004} from './model/InlineResponse2004';
import {InlineResponse2005} from './model/InlineResponse2005';
import {InlineResponse2006} from './model/InlineResponse2006';
import {InlineResponse2007} from './model/InlineResponse2007';
import {InlineResponse2008} from './model/InlineResponse2008';
import {InvitedMember} from './model/InvitedMember';
import {Location} from './model/Location';
import {MachineStats} from './model/MachineStats';
import {Member} from './model/Member';
import {MemberInfo} from './model/MemberInfo';
import {MemberRole} from './model/MemberRole';
import {Metric} from './model/Metric';
import {MetricList} from './model/MetricList';
import {MetricPath} from './model/MetricPath';
import {Metrics} from './model/Metrics';
import {Network} from './model/Network';
import {NetworkParams} from './model/NetworkParams';
import {NetworkStatistics} from './model/NetworkStatistics';
import {NewPassword} from './model/NewPassword';
import {Operator} from './model/Operator';
import {Overview} from './model/Overview';
import {Pagination} from './model/Pagination';
import {Params} from './model/Params';
import {ParticipantBody} from './model/ParticipantBody';
import {ParticipantIDCopyBody} from './model/ParticipantIDCopyBody';
import {PaymentMethod} from './model/PaymentMethod';
import {Project} from './model/Project';
import {Result} from './model/Result';
import {ResultAssert} from './model/ResultAssert';
import {ResultLog} from './model/ResultLog';
import {ResultResourceUsage} from './model/ResultResourceUsage';
import {ResultStatus} from './model/ResultStatus';
import {Run} from './model/Run';
import {RunAssertPrecondition} from './model/RunAssertPrecondition';
import {RunBody} from './model/RunBody';
import {RunParticipant} from './model/RunParticipant';
import {RunParticipantBody} from './model/RunParticipantBody';
import {SimpleProject} from './model/SimpleProject';
import {Statistics} from './model/Statistics';
import {Subscription} from './model/Subscription';
import {Test} from './model/Test';
import {TestIDCopyBody} from './model/TestIDCopyBody';
import {TestMode} from './model/TestMode';
import {TokenInfo} from './model/TokenInfo';
import {UpdateUserBody} from './model/UpdateUserBody';
import {ValidationResponse} from './model/ValidationResponse';
import {VatInfo} from './model/VatInfo';
import {VideoFeed} from './model/VideoFeed';
import {AssertApi} from './api/AssertApi';
import {FileApi} from './api/FileApi';
import {GroupApi} from './api/GroupApi';
import {GroupparticipantsApi} from './api/GroupparticipantsApi';
import {ParticipantsApi} from './api/ParticipantsApi';
import {PreconditionApi} from './api/PreconditionApi';
import {ProjectApi} from './api/ProjectApi';
import {ProjectresultApi} from './api/ProjectresultApi';
import {ProjectrunApi} from './api/ProjectrunApi';
import {ProjectrunparticipantApi} from './api/ProjectrunparticipantApi';
import {ResultApi} from './api/ResultApi';
import {RunApi} from './api/RunApi';
import {RunparticipantApi} from './api/RunparticipantApi';
import {StaticApi} from './api/StaticApi';
import {TestApi} from './api/TestApi';

/**
* This_application_serves_main_Loaderos_endpoints_that_can_be_used_tomanipulate_test_data_and_other_services.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var LoaderoController = require('index'); // See note below*.
* var xxxSvc = new LoaderoController.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new LoaderoController.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new LoaderoController.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new LoaderoController.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v0.32.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AWSInfo model constructor.
     * @property {module:model/AWSInfo}
     */
    AWSInfo,

    /**
     * The Account model constructor.
     * @property {module:model/Account}
     */
    Account,

    /**
     * The AddressInfo model constructor.
     * @property {module:model/AddressInfo}
     */
    AddressInfo,

    /**
     * The ArtifactInfo model constructor.
     * @property {module:model/ArtifactInfo}
     */
    ArtifactInfo,

    /**
     * The ArtifactsInfo model constructor.
     * @property {module:model/ArtifactsInfo}
     */
    ArtifactsInfo,

    /**
     * The Assert model constructor.
     * @property {module:model/Assert}
     */
    Assert,

    /**
     * The AssertOverview model constructor.
     * @property {module:model/AssertOverview}
     */
    AssertOverview,

    /**
     * The AssertPrecondition model constructor.
     * @property {module:model/AssertPrecondition}
     */
    AssertPrecondition,

    /**
     * The AudioFeed model constructor.
     * @property {module:model/AudioFeed}
     */
    AudioFeed,

    /**
     * The AwsInfoReponse model constructor.
     * @property {module:model/AwsInfoReponse}
     */
    AwsInfoReponse,

    /**
     * The Base model constructor.
     * @property {module:model/Base}
     */
    Base,

    /**
     * The BaseClassificator model constructor.
     * @property {module:model/BaseClassificator}
     */
    BaseClassificator,

    /**
     * The BillingInfo model constructor.
     * @property {module:model/BillingInfo}
     */
    BillingInfo,

    /**
     * The BillingInvoice model constructor.
     * @property {module:model/BillingInvoice}
     */
    BillingInvoice,

    /**
     * The Browser model constructor.
     * @property {module:model/Browser}
     */
    Browser,

    /**
     * The ClassificatorType model constructor.
     * @property {module:model/ClassificatorType}
     */
    ClassificatorType,

    /**
     * The Common model constructor.
     * @property {module:model/Common}
     */
    Common,

    /**
     * The ComputeUnit model constructor.
     * @property {module:model/ComputeUnit}
     */
    ComputeUnit,

    /**
     * The ComputeUnitUsage model constructor.
     * @property {module:model/ComputeUnitUsage}
     */
    ComputeUnitUsage,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The ExtendedResult model constructor.
     * @property {module:model/ExtendedResult}
     */
    ExtendedResult,

    /**
     * The File model constructor.
     * @property {module:model/File}
     */
    File,

    /**
     * The Filterer model constructor.
     * @property {module:model/Filterer}
     */
    Filterer,

    /**
     * The FullAssert model constructor.
     * @property {module:model/FullAssert}
     */
    FullAssert,

    /**
     * The FullProject model constructor.
     * @property {module:model/FullProject}
     */
    FullProject,

    /**
     * The Generic model constructor.
     * @property {module:model/Generic}
     */
    Generic,

    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group,

    /**
     * The GroupIDCopyBody model constructor.
     * @property {module:model/GroupIDCopyBody}
     */
    GroupIDCopyBody,

    /**
     * The GroupParticipantBody model constructor.
     * @property {module:model/GroupParticipantBody}
     */
    GroupParticipantBody,

    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200,

    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001,

    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002,

    /**
     * The InlineResponse2003 model constructor.
     * @property {module:model/InlineResponse2003}
     */
    InlineResponse2003,

    /**
     * The InlineResponse2004 model constructor.
     * @property {module:model/InlineResponse2004}
     */
    InlineResponse2004,

    /**
     * The InlineResponse2005 model constructor.
     * @property {module:model/InlineResponse2005}
     */
    InlineResponse2005,

    /**
     * The InlineResponse2006 model constructor.
     * @property {module:model/InlineResponse2006}
     */
    InlineResponse2006,

    /**
     * The InlineResponse2007 model constructor.
     * @property {module:model/InlineResponse2007}
     */
    InlineResponse2007,

    /**
     * The InlineResponse2008 model constructor.
     * @property {module:model/InlineResponse2008}
     */
    InlineResponse2008,

    /**
     * The InvitedMember model constructor.
     * @property {module:model/InvitedMember}
     */
    InvitedMember,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The MachineStats model constructor.
     * @property {module:model/MachineStats}
     */
    MachineStats,

    /**
     * The Member model constructor.
     * @property {module:model/Member}
     */
    Member,

    /**
     * The MemberInfo model constructor.
     * @property {module:model/MemberInfo}
     */
    MemberInfo,

    /**
     * The MemberRole model constructor.
     * @property {module:model/MemberRole}
     */
    MemberRole,

    /**
     * The Metric model constructor.
     * @property {module:model/Metric}
     */
    Metric,

    /**
     * The MetricList model constructor.
     * @property {module:model/MetricList}
     */
    MetricList,

    /**
     * The MetricPath model constructor.
     * @property {module:model/MetricPath}
     */
    MetricPath,

    /**
     * The Metrics model constructor.
     * @property {module:model/Metrics}
     */
    Metrics,

    /**
     * The Network model constructor.
     * @property {module:model/Network}
     */
    Network,

    /**
     * The NetworkParams model constructor.
     * @property {module:model/NetworkParams}
     */
    NetworkParams,

    /**
     * The NetworkStatistics model constructor.
     * @property {module:model/NetworkStatistics}
     */
    NetworkStatistics,

    /**
     * The NewPassword model constructor.
     * @property {module:model/NewPassword}
     */
    NewPassword,

    /**
     * The Operator model constructor.
     * @property {module:model/Operator}
     */
    Operator,

    /**
     * The Overview model constructor.
     * @property {module:model/Overview}
     */
    Overview,

    /**
     * The Pagination model constructor.
     * @property {module:model/Pagination}
     */
    Pagination,

    /**
     * The Params model constructor.
     * @property {module:model/Params}
     */
    Params,

    /**
     * The ParticipantBody model constructor.
     * @property {module:model/ParticipantBody}
     */
    ParticipantBody,

    /**
     * The ParticipantIDCopyBody model constructor.
     * @property {module:model/ParticipantIDCopyBody}
     */
    ParticipantIDCopyBody,

    /**
     * The PaymentMethod model constructor.
     * @property {module:model/PaymentMethod}
     */
    PaymentMethod,

    /**
     * The Project model constructor.
     * @property {module:model/Project}
     */
    Project,

    /**
     * The Result model constructor.
     * @property {module:model/Result}
     */
    Result,

    /**
     * The ResultAssert model constructor.
     * @property {module:model/ResultAssert}
     */
    ResultAssert,

    /**
     * The ResultLog model constructor.
     * @property {module:model/ResultLog}
     */
    ResultLog,

    /**
     * The ResultResourceUsage model constructor.
     * @property {module:model/ResultResourceUsage}
     */
    ResultResourceUsage,

    /**
     * The ResultStatus model constructor.
     * @property {module:model/ResultStatus}
     */
    ResultStatus,

    /**
     * The Run model constructor.
     * @property {module:model/Run}
     */
    Run,

    /**
     * The RunAssertPrecondition model constructor.
     * @property {module:model/RunAssertPrecondition}
     */
    RunAssertPrecondition,

    /**
     * The RunBody model constructor.
     * @property {module:model/RunBody}
     */
    RunBody,

    /**
     * The RunParticipant model constructor.
     * @property {module:model/RunParticipant}
     */
    RunParticipant,

    /**
     * The RunParticipantBody model constructor.
     * @property {module:model/RunParticipantBody}
     */
    RunParticipantBody,

    /**
     * The SimpleProject model constructor.
     * @property {module:model/SimpleProject}
     */
    SimpleProject,

    /**
     * The Statistics model constructor.
     * @property {module:model/Statistics}
     */
    Statistics,

    /**
     * The Subscription model constructor.
     * @property {module:model/Subscription}
     */
    Subscription,

    /**
     * The Test model constructor.
     * @property {module:model/Test}
     */
    Test,

    /**
     * The TestIDCopyBody model constructor.
     * @property {module:model/TestIDCopyBody}
     */
    TestIDCopyBody,

    /**
     * The TestMode model constructor.
     * @property {module:model/TestMode}
     */
    TestMode,

    /**
     * The TokenInfo model constructor.
     * @property {module:model/TokenInfo}
     */
    TokenInfo,

    /**
     * The UpdateUserBody model constructor.
     * @property {module:model/UpdateUserBody}
     */
    UpdateUserBody,

    /**
     * The ValidationResponse model constructor.
     * @property {module:model/ValidationResponse}
     */
    ValidationResponse,

    /**
     * The VatInfo model constructor.
     * @property {module:model/VatInfo}
     */
    VatInfo,

    /**
     * The VideoFeed model constructor.
     * @property {module:model/VideoFeed}
     */
    VideoFeed,

    /**
    * The AssertApi service constructor.
    * @property {module:api/AssertApi}
    */
    AssertApi,

    /**
    * The FileApi service constructor.
    * @property {module:api/FileApi}
    */
    FileApi,

    /**
    * The GroupApi service constructor.
    * @property {module:api/GroupApi}
    */
    GroupApi,

    /**
    * The GroupparticipantsApi service constructor.
    * @property {module:api/GroupparticipantsApi}
    */
    GroupparticipantsApi,

    /**
    * The ParticipantsApi service constructor.
    * @property {module:api/ParticipantsApi}
    */
    ParticipantsApi,

    /**
    * The PreconditionApi service constructor.
    * @property {module:api/PreconditionApi}
    */
    PreconditionApi,

    /**
    * The ProjectApi service constructor.
    * @property {module:api/ProjectApi}
    */
    ProjectApi,

    /**
    * The ProjectresultApi service constructor.
    * @property {module:api/ProjectresultApi}
    */
    ProjectresultApi,

    /**
    * The ProjectrunApi service constructor.
    * @property {module:api/ProjectrunApi}
    */
    ProjectrunApi,

    /**
    * The ProjectrunparticipantApi service constructor.
    * @property {module:api/ProjectrunparticipantApi}
    */
    ProjectrunparticipantApi,

    /**
    * The ResultApi service constructor.
    * @property {module:api/ResultApi}
    */
    ResultApi,

    /**
    * The RunApi service constructor.
    * @property {module:api/RunApi}
    */
    RunApi,

    /**
    * The RunparticipantApi service constructor.
    * @property {module:api/RunparticipantApi}
    */
    RunparticipantApi,

    /**
    * The StaticApi service constructor.
    * @property {module:api/StaticApi}
    */
    StaticApi,

    /**
    * The TestApi service constructor.
    * @property {module:api/TestApi}
    */
    TestApi
};
