/*
 * Loadero Controller
 * This application serves main Loadero's endpoints that can be used to manipulate test data and other services
 *
 * OpenAPI spec version: v0.32.1
 * Contact: support@loadero.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.21
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AWSInfo', 'model/Account', 'model/AddressInfo', 'model/ArtifactInfo', 'model/ArtifactsInfo', 'model/Assert', 'model/AssertOverview', 'model/AssertPrecondition', 'model/AudioFeed', 'model/AwsInfoReponse', 'model/Base', 'model/BaseClassificator', 'model/BillingInfo', 'model/BillingInvoice', 'model/Browser', 'model/ClassificatorType', 'model/Common', 'model/ComputeUnit', 'model/ComputeUnitUsage', 'model/ErrorResponse', 'model/ExtendedResult', 'model/File', 'model/Filterer', 'model/FullAssert', 'model/FullProject', 'model/Generic', 'model/Group', 'model/GroupParticipantBody', 'model/InvitedMember', 'model/Location', 'model/MachineStats', 'model/Member', 'model/MemberInfo', 'model/MemberRole', 'model/Metric', 'model/MetricList', 'model/MetricPath', 'model/Metrics', 'model/Network', 'model/NetworkParams', 'model/NetworkStatistics', 'model/NewPassword', 'model/Operator', 'model/Overview', 'model/Pagination', 'model/Params', 'model/ParticipantBody', 'model/PaymentMethod', 'model/Project', 'model/Result', 'model/ResultAssert', 'model/ResultLog', 'model/ResultResourceUsage', 'model/ResultStatus', 'model/Run', 'model/RunAssertPrecondition', 'model/RunBody', 'model/RunParticipant', 'model/RunParticipantBody', 'model/SimpleProject', 'model/Statistics', 'model/Subscription', 'model/Test', 'model/TestMode', 'model/TokenInfo', 'model/UpdateUserBody', 'model/ValidationResponse', 'model/VatInfo', 'model/VideoFeed', 'api/AssertApi', 'api/FileApi', 'api/GroupApi', 'api/GroupparticipantsApi', 'api/ParticipantsApi', 'api/PreconditionApi', 'api/ProjectApi', 'api/ProjectresultApi', 'api/ProjectrunApi', 'api/ProjectrunparticipantApi', 'api/ResultApi', 'api/RunApi', 'api/RunparticipantApi', 'api/StaticApi', 'api/TestApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AWSInfo'), require('./model/Account'), require('./model/AddressInfo'), require('./model/ArtifactInfo'), require('./model/ArtifactsInfo'), require('./model/Assert'), require('./model/AssertOverview'), require('./model/AssertPrecondition'), require('./model/AudioFeed'), require('./model/AwsInfoReponse'), require('./model/Base'), require('./model/BaseClassificator'), require('./model/BillingInfo'), require('./model/BillingInvoice'), require('./model/Browser'), require('./model/ClassificatorType'), require('./model/Common'), require('./model/ComputeUnit'), require('./model/ComputeUnitUsage'), require('./model/ErrorResponse'), require('./model/ExtendedResult'), require('./model/File'), require('./model/Filterer'), require('./model/FullAssert'), require('./model/FullProject'), require('./model/Generic'), require('./model/Group'), require('./model/GroupParticipantBody'), require('./model/InvitedMember'), require('./model/Location'), require('./model/MachineStats'), require('./model/Member'), require('./model/MemberInfo'), require('./model/MemberRole'), require('./model/Metric'), require('./model/MetricList'), require('./model/MetricPath'), require('./model/Metrics'), require('./model/Network'), require('./model/NetworkParams'), require('./model/NetworkStatistics'), require('./model/NewPassword'), require('./model/Operator'), require('./model/Overview'), require('./model/Pagination'), require('./model/Params'), require('./model/ParticipantBody'), require('./model/PaymentMethod'), require('./model/Project'), require('./model/Result'), require('./model/ResultAssert'), require('./model/ResultLog'), require('./model/ResultResourceUsage'), require('./model/ResultStatus'), require('./model/Run'), require('./model/RunAssertPrecondition'), require('./model/RunBody'), require('./model/RunParticipant'), require('./model/RunParticipantBody'), require('./model/SimpleProject'), require('./model/Statistics'), require('./model/Subscription'), require('./model/Test'), require('./model/TestMode'), require('./model/TokenInfo'), require('./model/UpdateUserBody'), require('./model/ValidationResponse'), require('./model/VatInfo'), require('./model/VideoFeed'), require('./api/AssertApi'), require('./api/FileApi'), require('./api/GroupApi'), require('./api/GroupparticipantsApi'), require('./api/ParticipantsApi'), require('./api/PreconditionApi'), require('./api/ProjectApi'), require('./api/ProjectresultApi'), require('./api/ProjectrunApi'), require('./api/ProjectrunparticipantApi'), require('./api/ResultApi'), require('./api/RunApi'), require('./api/RunparticipantApi'), require('./api/StaticApi'), require('./api/TestApi'));
  }
}(function(ApiClient, AWSInfo, Account, AddressInfo, ArtifactInfo, ArtifactsInfo, Assert, AssertOverview, AssertPrecondition, AudioFeed, AwsInfoReponse, Base, BaseClassificator, BillingInfo, BillingInvoice, Browser, ClassificatorType, Common, ComputeUnit, ComputeUnitUsage, ErrorResponse, ExtendedResult, File, Filterer, FullAssert, FullProject, Generic, Group, GroupParticipantBody, InvitedMember, Location, MachineStats, Member, MemberInfo, MemberRole, Metric, MetricList, MetricPath, Metrics, Network, NetworkParams, NetworkStatistics, NewPassword, Operator, Overview, Pagination, Params, ParticipantBody, PaymentMethod, Project, Result, ResultAssert, ResultLog, ResultResourceUsage, ResultStatus, Run, RunAssertPrecondition, RunBody, RunParticipant, RunParticipantBody, SimpleProject, Statistics, Subscription, Test, TestMode, TokenInfo, UpdateUserBody, ValidationResponse, VatInfo, VideoFeed, AssertApi, FileApi, GroupApi, GroupparticipantsApi, ParticipantsApi, PreconditionApi, ProjectApi, ProjectresultApi, ProjectrunApi, ProjectrunparticipantApi, ResultApi, RunApi, RunparticipantApi, StaticApi, TestApi) {
  'use strict';

  /**
   * This_application_serves_main_Loaderos_endpoints_that_can_be_used_tomanipulate_test_data_and_other_services.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var LoaderoController = require('index'); // See note below*.
   * var xxxSvc = new LoaderoController.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new LoaderoController.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new LoaderoController.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new LoaderoController.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version v0.32.1
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AWSInfo model constructor.
     * @property {module:model/AWSInfo}
     */
    AWSInfo: AWSInfo,
    /**
     * The Account model constructor.
     * @property {module:model/Account}
     */
    Account: Account,
    /**
     * The AddressInfo model constructor.
     * @property {module:model/AddressInfo}
     */
    AddressInfo: AddressInfo,
    /**
     * The ArtifactInfo model constructor.
     * @property {module:model/ArtifactInfo}
     */
    ArtifactInfo: ArtifactInfo,
    /**
     * The ArtifactsInfo model constructor.
     * @property {module:model/ArtifactsInfo}
     */
    ArtifactsInfo: ArtifactsInfo,
    /**
     * The Assert model constructor.
     * @property {module:model/Assert}
     */
    Assert: Assert,
    /**
     * The AssertOverview model constructor.
     * @property {module:model/AssertOverview}
     */
    AssertOverview: AssertOverview,
    /**
     * The AssertPrecondition model constructor.
     * @property {module:model/AssertPrecondition}
     */
    AssertPrecondition: AssertPrecondition,
    /**
     * The AudioFeed model constructor.
     * @property {module:model/AudioFeed}
     */
    AudioFeed: AudioFeed,
    /**
     * The AwsInfoReponse model constructor.
     * @property {module:model/AwsInfoReponse}
     */
    AwsInfoReponse: AwsInfoReponse,
    /**
     * The Base model constructor.
     * @property {module:model/Base}
     */
    Base: Base,
    /**
     * The BaseClassificator model constructor.
     * @property {module:model/BaseClassificator}
     */
    BaseClassificator: BaseClassificator,
    /**
     * The BillingInfo model constructor.
     * @property {module:model/BillingInfo}
     */
    BillingInfo: BillingInfo,
    /**
     * The BillingInvoice model constructor.
     * @property {module:model/BillingInvoice}
     */
    BillingInvoice: BillingInvoice,
    /**
     * The Browser model constructor.
     * @property {module:model/Browser}
     */
    Browser: Browser,
    /**
     * The ClassificatorType model constructor.
     * @property {module:model/ClassificatorType}
     */
    ClassificatorType: ClassificatorType,
    /**
     * The Common model constructor.
     * @property {module:model/Common}
     */
    Common: Common,
    /**
     * The ComputeUnit model constructor.
     * @property {module:model/ComputeUnit}
     */
    ComputeUnit: ComputeUnit,
    /**
     * The ComputeUnitUsage model constructor.
     * @property {module:model/ComputeUnitUsage}
     */
    ComputeUnitUsage: ComputeUnitUsage,
    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse: ErrorResponse,
    /**
     * The ExtendedResult model constructor.
     * @property {module:model/ExtendedResult}
     */
    ExtendedResult: ExtendedResult,
    /**
     * The File model constructor.
     * @property {module:model/File}
     */
    File: File,
    /**
     * The Filterer model constructor.
     * @property {module:model/Filterer}
     */
    Filterer: Filterer,
    /**
     * The FullAssert model constructor.
     * @property {module:model/FullAssert}
     */
    FullAssert: FullAssert,
    /**
     * The FullProject model constructor.
     * @property {module:model/FullProject}
     */
    FullProject: FullProject,
    /**
     * The Generic model constructor.
     * @property {module:model/Generic}
     */
    Generic: Generic,
    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group: Group,
    /**
     * The GroupParticipantBody model constructor.
     * @property {module:model/GroupParticipantBody}
     */
    GroupParticipantBody: GroupParticipantBody,
    /**
     * The InvitedMember model constructor.
     * @property {module:model/InvitedMember}
     */
    InvitedMember: InvitedMember,
    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location: Location,
    /**
     * The MachineStats model constructor.
     * @property {module:model/MachineStats}
     */
    MachineStats: MachineStats,
    /**
     * The Member model constructor.
     * @property {module:model/Member}
     */
    Member: Member,
    /**
     * The MemberInfo model constructor.
     * @property {module:model/MemberInfo}
     */
    MemberInfo: MemberInfo,
    /**
     * The MemberRole model constructor.
     * @property {module:model/MemberRole}
     */
    MemberRole: MemberRole,
    /**
     * The Metric model constructor.
     * @property {module:model/Metric}
     */
    Metric: Metric,
    /**
     * The MetricList model constructor.
     * @property {module:model/MetricList}
     */
    MetricList: MetricList,
    /**
     * The MetricPath model constructor.
     * @property {module:model/MetricPath}
     */
    MetricPath: MetricPath,
    /**
     * The Metrics model constructor.
     * @property {module:model/Metrics}
     */
    Metrics: Metrics,
    /**
     * The Network model constructor.
     * @property {module:model/Network}
     */
    Network: Network,
    /**
     * The NetworkParams model constructor.
     * @property {module:model/NetworkParams}
     */
    NetworkParams: NetworkParams,
    /**
     * The NetworkStatistics model constructor.
     * @property {module:model/NetworkStatistics}
     */
    NetworkStatistics: NetworkStatistics,
    /**
     * The NewPassword model constructor.
     * @property {module:model/NewPassword}
     */
    NewPassword: NewPassword,
    /**
     * The Operator model constructor.
     * @property {module:model/Operator}
     */
    Operator: Operator,
    /**
     * The Overview model constructor.
     * @property {module:model/Overview}
     */
    Overview: Overview,
    /**
     * The Pagination model constructor.
     * @property {module:model/Pagination}
     */
    Pagination: Pagination,
    /**
     * The Params model constructor.
     * @property {module:model/Params}
     */
    Params: Params,
    /**
     * The ParticipantBody model constructor.
     * @property {module:model/ParticipantBody}
     */
    ParticipantBody: ParticipantBody,
    /**
     * The PaymentMethod model constructor.
     * @property {module:model/PaymentMethod}
     */
    PaymentMethod: PaymentMethod,
    /**
     * The Project model constructor.
     * @property {module:model/Project}
     */
    Project: Project,
    /**
     * The Result model constructor.
     * @property {module:model/Result}
     */
    Result: Result,
    /**
     * The ResultAssert model constructor.
     * @property {module:model/ResultAssert}
     */
    ResultAssert: ResultAssert,
    /**
     * The ResultLog model constructor.
     * @property {module:model/ResultLog}
     */
    ResultLog: ResultLog,
    /**
     * The ResultResourceUsage model constructor.
     * @property {module:model/ResultResourceUsage}
     */
    ResultResourceUsage: ResultResourceUsage,
    /**
     * The ResultStatus model constructor.
     * @property {module:model/ResultStatus}
     */
    ResultStatus: ResultStatus,
    /**
     * The Run model constructor.
     * @property {module:model/Run}
     */
    Run: Run,
    /**
     * The RunAssertPrecondition model constructor.
     * @property {module:model/RunAssertPrecondition}
     */
    RunAssertPrecondition: RunAssertPrecondition,
    /**
     * The RunBody model constructor.
     * @property {module:model/RunBody}
     */
    RunBody: RunBody,
    /**
     * The RunParticipant model constructor.
     * @property {module:model/RunParticipant}
     */
    RunParticipant: RunParticipant,
    /**
     * The RunParticipantBody model constructor.
     * @property {module:model/RunParticipantBody}
     */
    RunParticipantBody: RunParticipantBody,
    /**
     * The SimpleProject model constructor.
     * @property {module:model/SimpleProject}
     */
    SimpleProject: SimpleProject,
    /**
     * The Statistics model constructor.
     * @property {module:model/Statistics}
     */
    Statistics: Statistics,
    /**
     * The Subscription model constructor.
     * @property {module:model/Subscription}
     */
    Subscription: Subscription,
    /**
     * The Test model constructor.
     * @property {module:model/Test}
     */
    Test: Test,
    /**
     * The TestMode model constructor.
     * @property {module:model/TestMode}
     */
    TestMode: TestMode,
    /**
     * The TokenInfo model constructor.
     * @property {module:model/TokenInfo}
     */
    TokenInfo: TokenInfo,
    /**
     * The UpdateUserBody model constructor.
     * @property {module:model/UpdateUserBody}
     */
    UpdateUserBody: UpdateUserBody,
    /**
     * The ValidationResponse model constructor.
     * @property {module:model/ValidationResponse}
     */
    ValidationResponse: ValidationResponse,
    /**
     * The VatInfo model constructor.
     * @property {module:model/VatInfo}
     */
    VatInfo: VatInfo,
    /**
     * The VideoFeed model constructor.
     * @property {module:model/VideoFeed}
     */
    VideoFeed: VideoFeed,
    /**
     * The AssertApi service constructor.
     * @property {module:api/AssertApi}
     */
    AssertApi: AssertApi,
    /**
     * The FileApi service constructor.
     * @property {module:api/FileApi}
     */
    FileApi: FileApi,
    /**
     * The GroupApi service constructor.
     * @property {module:api/GroupApi}
     */
    GroupApi: GroupApi,
    /**
     * The GroupparticipantsApi service constructor.
     * @property {module:api/GroupparticipantsApi}
     */
    GroupparticipantsApi: GroupparticipantsApi,
    /**
     * The ParticipantsApi service constructor.
     * @property {module:api/ParticipantsApi}
     */
    ParticipantsApi: ParticipantsApi,
    /**
     * The PreconditionApi service constructor.
     * @property {module:api/PreconditionApi}
     */
    PreconditionApi: PreconditionApi,
    /**
     * The ProjectApi service constructor.
     * @property {module:api/ProjectApi}
     */
    ProjectApi: ProjectApi,
    /**
     * The ProjectresultApi service constructor.
     * @property {module:api/ProjectresultApi}
     */
    ProjectresultApi: ProjectresultApi,
    /**
     * The ProjectrunApi service constructor.
     * @property {module:api/ProjectrunApi}
     */
    ProjectrunApi: ProjectrunApi,
    /**
     * The ProjectrunparticipantApi service constructor.
     * @property {module:api/ProjectrunparticipantApi}
     */
    ProjectrunparticipantApi: ProjectrunparticipantApi,
    /**
     * The ResultApi service constructor.
     * @property {module:api/ResultApi}
     */
    ResultApi: ResultApi,
    /**
     * The RunApi service constructor.
     * @property {module:api/RunApi}
     */
    RunApi: RunApi,
    /**
     * The RunparticipantApi service constructor.
     * @property {module:api/RunparticipantApi}
     */
    RunparticipantApi: RunparticipantApi,
    /**
     * The StaticApi service constructor.
     * @property {module:api/StaticApi}
     */
    StaticApi: StaticApi,
    /**
     * The TestApi service constructor.
     * @property {module:api/TestApi}
     */
    TestApi: TestApi
  };

  return exports;
}));
