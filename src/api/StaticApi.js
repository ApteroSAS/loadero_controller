/*
 * Loadero Controller
 * This application serves main Loadero's endpoints that can be used to manipulate test data and other services
 *
 * OpenAPI spec version: v0.32.1
 * Contact: support@loadero.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.21
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BaseClassificator', 'model/ErrorResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/BaseClassificator'), require('../model/ErrorResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.LoaderoController) {
      root.LoaderoController = {};
    }
    root.LoaderoController.StaticApi = factory(root.LoaderoController.ApiClient, root.LoaderoController.BaseClassificator, root.LoaderoController.ErrorResponse);
  }
}(this, function(ApiClient, BaseClassificator, ErrorResponse) {
  'use strict';

  /**
   * Static service.
   * @module api/StaticApi
   * @version v0.32.1
   */

  /**
   * Constructs a new StaticApi. 
   * @alias module:api/StaticApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the readAllStaticTypes operation.
     * @callback module:api/StaticApi~readAllStaticTypesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<'String'>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Read all static type info
     * This endpoint retrieves all static type info
     * @param {module:api/StaticApi~readAllStaticTypesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<'String'>}
     */
    this.readAllStaticTypes = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiKeyAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ['String'];

      return this.apiClient.callApi(
        '/statics/types/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the readAllStatics operation.
     * @callback module:api/StaticApi~readAllStaticsCallback
     * @param {String} error Error message, if any.
     * @param {Object.<String, {'String': [BaseClassificator]}>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Read all static resource info
     * This endpoint retrieves all static resource info
     * @param {module:api/StaticApi~readAllStaticsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object.<String, {'String': [BaseClassificator]}>}
     */
    this.readAllStatics = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiKeyAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = {'String': [BaseClassificator]};

      return this.apiClient.callApi(
        '/statics/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the readMetricPath operation.
     * @callback module:api/StaticApi~readMetricPathCallback
     * @param {String} error Error message, if any.
     * @param {Array.<'String'>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Read all metric path info
     * This endpoint retrieves all available metric paths
     * @param {module:api/StaticApi~readMetricPathCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<'String'>}
     */
    this.readMetricPath = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiKeyAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ['String'];

      return this.apiClient.callApi(
        '/statics/metric_path/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the readStaticResource operation.
     * @callback module:api/StaticApi~readStaticResourceCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/BaseClassificator>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Read all specified static resource info
     * This endpoint retrieves all specified static resource info
     * @param {String} resource 
     * @param {module:api/StaticApi~readStaticResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/BaseClassificator>}
     */
    this.readStaticResource = function(resource, callback) {
      var postBody = null;

      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling readStaticResource");
      }


      var pathParams = {
        'resource': resource
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiKeyAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [BaseClassificator];

      return this.apiClient.callApi(
        '/statics/{resource}/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
